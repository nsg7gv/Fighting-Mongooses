[{"C:\\Users\\Kaleb\\source\\repos\\Fighting-Mongooses\\src\\index.js":"1","C:\\Users\\Kaleb\\source\\repos\\Fighting-Mongooses\\src\\components\\SignUpSide.js":"2","C:\\Users\\Kaleb\\source\\repos\\Fighting-Mongooses\\src\\components\\SignInSide.js":"3","C:\\Users\\Kaleb\\source\\repos\\Fighting-Mongooses\\src\\components\\JobsSideTest.js":"4","C:\\Users\\Kaleb\\source\\repos\\Fighting-Mongooses\\src\\components\\actionButtons.js":"5","C:\\Users\\Kaleb\\source\\repos\\Fighting-Mongooses\\src\\components\\firebase-config.js":"6","C:\\Users\\Kaleb\\source\\repos\\Fighting-Mongooses\\src\\components\\jobList.js":"7","C:\\Users\\Kaleb\\source\\repos\\Fighting-Mongooses\\src\\components\\jobForm.js":"8","C:\\Users\\Kaleb\\source\\repos\\Fighting-Mongooses\\src\\components\\popup.js":"9","C:\\Users\\Kaleb\\source\\repos\\Fighting-Mongooses\\src\\components\\profile.js":"10","C:\\Users\\Kaleb\\source\\repos\\Fighting-Mongooses\\src\\firebase.js":"11","C:\\Users\\Kaleb\\source\\repos\\Fighting-Mongooses\\src\\components\\TestHeader.js":"12","C:\\Users\\Kaleb\\source\\repos\\Fighting-Mongooses\\src\\components\\Welcome.js":"13","C:\\Users\\Kaleb\\source\\repos\\Fighting-Mongooses\\src\\components\\userInfo.js":"14","C:\\Users\\Kaleb\\source\\repos\\Fighting-Mongooses\\src\\components\\adminHeader.js":"15"},{"size":1145,"mtime":1681694841058,"results":"16","hashOfConfig":"17"},{"size":4019,"mtime":1681755929710,"results":"18","hashOfConfig":"17"},{"size":6711,"mtime":1681697665299,"results":"19","hashOfConfig":"17"},{"size":6352,"mtime":1681754666641,"results":"20","hashOfConfig":"17"},{"size":432,"mtime":1679506359528,"results":"21","hashOfConfig":"17"},{"size":750,"mtime":1679624266681,"results":"22","hashOfConfig":"17"},{"size":3127,"mtime":1681831547725,"results":"23","hashOfConfig":"17"},{"size":2771,"mtime":1679430215561,"results":"24","hashOfConfig":"17"},{"size":785,"mtime":1681757368122,"results":"25","hashOfConfig":"17"},{"size":53969,"mtime":1679619426207,"results":"26","hashOfConfig":"17"},{"size":583,"mtime":1679619426207,"results":"27","hashOfConfig":"17"},{"size":1040,"mtime":1681340325885,"results":"28","hashOfConfig":"17"},{"size":9925,"mtime":1681747037171,"results":"29","hashOfConfig":"17"},{"size":1428,"mtime":1681694582181,"results":"30","hashOfConfig":"17"},{"size":2682,"mtime":1681755216416,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"sf3lo6",{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"35"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"35"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"35"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"35"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Kaleb\\source\\repos\\Fighting-Mongooses\\src\\index.js",[],[],[],"C:\\Users\\Kaleb\\source\\repos\\Fighting-Mongooses\\src\\components\\SignUpSide.js",["82","83"],[],"C:\\Users\\Kaleb\\source\\repos\\Fighting-Mongooses\\src\\components\\SignInSide.js",["84","85","86"],[],"import React, { useState, useContext } from \"react\";\r\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\r\nimport { AuthContext } from \"./userInfo\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport backgroundImage from '../../src/assets/images/logo.jpeg';\r\nimport { db } from \"./firebase-config\";\r\nimport { collection, doc, getDocs, query, where } from \"firebase/firestore\";\r\n\r\nconst Message = () => (\r\n  <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n    {\"UMKC CS 451-R Project\"}\r\n  </Typography>\r\n);\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: \"100vh\"\r\n  },\r\n  image: {\r\n    backgroundImage: `url(${backgroundImage})`,\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\"\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\"\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: '#296BBD'\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  },\r\n  confirmationPopup: {\r\n    position: \"fixed\",\r\n    top: \"20px\",\r\n    left: \"50%\",\r\n    transform: \"translateX(-50%)\",\r\n    zIndex: 1000,\r\n    backgroundColor: \"rgba(0, 255, 0, 0.8)\",\r\n    borderRadius: \"5px\",\r\n    padding: \"10px 20px\",\r\n    color: \"#fff\"\r\n  },\r\n  errorPopup: {\r\n    position: \"fixed\",\r\n    top: \"20px\",\r\n    left: \"50%\",\r\n    transform: \"translateX(-50%)\",\r\n    zIndex: 1000,\r\n    backgroundColor: \"rgba(255, 0, 0, 0.8)\",\r\n    borderRadius: \"5px\",\r\n    padding: \"10px 20px\",\r\n    color: \"#fff\"\r\n  }\r\n  \r\n  \r\n}));\r\n\r\nconst SignInSide = () => {\r\n  const classes = useStyles();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(null);\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  const [showConfirmation, setShowConfirmation] = useState(false);\r\n  const [showErrorPopup, setShowErrorPopup] = useState(false);\r\n\r\n  const navigate = useNavigate();\r\n\r\n\r\n  const { setUser } = useContext(AuthContext);\r\n\r\n    const signIn = async (event) => {\r\n      event.preventDefault();\r\n\r\n      const auth = getAuth();\r\n\r\n      try {\r\n        await signInWithEmailAndPassword(auth, email, password);\r\n\r\n        const userQuery = query(collection(db, \"profile\"), where(\"Email\", \"==\", email));\r\n        const querySnapshot = await getDocs(userQuery);\r\n        let userData = null;\r\n    \r\n        querySnapshot.forEach((doc) => {\r\n          userData = doc.data();\r\n        });\r\n    \r\n        if (userData) {\r\n          console.log(\"User signed in:\", userData);\r\n          setLoggedIn(true);\r\n          setShowConfirmation(true); // Show the confirmation message\r\n\r\n          navigate('/');\r\n\r\n    \r\n          // Hide the confirmation message after 3 seconds\r\n          setTimeout(() => {\r\n            setShowConfirmation(false);\r\n          }, 3000);\r\n          \r\n          // Set user data in the AuthContext\r\n          setUser(userData);\r\n        }\r\n      } catch (error) {\r\n        setError(error.message);\r\n        console.error(\"Error signing in:\", error);\r\n        setShowErrorPopup(true); // Show the error popup\r\n\r\n        // Hide the error popup after 3 seconds\r\n        setTimeout(() => {\r\n          setShowErrorPopup(false);\r\n        }, 3000);\r\n      }\r\n    };\r\n  \r\n\r\n  \r\n\r\n  \r\n  const handleEmailChange = (event) => {\r\n    setEmail(event.target.value);\r\n  };\r\n\r\n  const handlePasswordChange = (event) => {\r\n    setPassword(event.target.value);\r\n  };\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      {showConfirmation && (\r\n        <div className={classes.confirmationPopup}>User is logged in.</div>\r\n      )}\r\n      {showErrorPopup && (\r\n  <div className={classes.errorPopup}>Invalid email or password.</div>\r\n)}\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <form className={classes.form} noValidate onSubmit={signIn}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              value={email}\r\n              onChange={handleEmailChange}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              value={password}\r\n              onChange={handlePasswordChange}\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Sign In\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                {/* <Link href=\"#\" variant=\"body2\">\r\n                  Forgot password?\r\n                </Link> */}\r\n              </Grid>\r\n              <Grid item>\r\n                <Link href=\"/signup\" variant=\"body2\">\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n            <Box mt={5}>\r\n              <Message />\r\n            </Box>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default SignInSide;\r\n","C:\\Users\\Kaleb\\source\\repos\\Fighting-Mongooses\\src\\components\\JobsSideTest.js",["87","88","89","90"],[],"C:\\Users\\Kaleb\\source\\repos\\Fighting-Mongooses\\src\\components\\actionButtons.js",[],[],"C:\\Users\\Kaleb\\source\\repos\\Fighting-Mongooses\\src\\components\\firebase-config.js",[],[],"C:\\Users\\Kaleb\\source\\repos\\Fighting-Mongooses\\src\\components\\jobList.js",[],[],"C:\\Users\\Kaleb\\source\\repos\\Fighting-Mongooses\\src\\components\\jobForm.js",[],[],"C:\\Users\\Kaleb\\source\\repos\\Fighting-Mongooses\\src\\components\\popup.js",["91"],[],"C:\\Users\\Kaleb\\source\\repos\\Fighting-Mongooses\\src\\components\\profile.js",["92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108"],[],"import * as React from 'react'\r\nimport { useEffect, useState } from 'react';\r\nimport { db } from '../firebase';\r\nimport { collection, getDocs, addDoc, doc, updateDoc, deleteDoc, query, where } from \"firebase/firestore\"\r\nimport { Typography, Container, Grid, Card, CardActions, CardContent, TextField, CssBaseline, Divider, Button, Popover, PaperProps } from \"@material-ui/core\";\r\n\r\nconst getOptions = () => {\r\n    return [\r\n      { value: '', label: 'Select Grade' },\r\n      { value: 'A', label: 'Grade A' },\r\n      { value: 'A-', label: 'Grade A-' },\r\n      { value: 'B+', label: 'Grade B+' },\r\n      { value: 'B', label: 'Grade B' },\r\n      { value: 'B-', label: 'Grade B-' },\r\n      { value: 'C+', label: 'Grade C+' },\r\n      { value: 'C', label: 'Grade C' },\r\n      { value: 'C-', label: 'Grade C-' },\r\n      { value: 'F', label: 'Grade F' },\r\n      { value: 'WD', label: 'Withdrawn' },\r\n      { value: 'DROP', label: 'Dropped' },\r\n      { value: ' ', label: 'Remove Grade'}\r\n    ];\r\n  };\r\n\r\n  const getOptionsMajor = () => {\r\n    return [\r\n      { value: '', label: 'Select Major' },\r\n      { value: 'CS', label: 'Comp Sci' },\r\n      { value: 'IT', label: 'Info Tech' },\r\n      { value: 'ECE', label: 'ECE' },\r\n      { value: 'EE', label: 'EE' },\r\n    ];\r\n  };\r\n\r\n  const getOptionsLevel = () => {\r\n    return [\r\n      { value: '', label: 'Select Level' },\r\n      { value: 'BS', label: 'Bachelors' },\r\n      { value: 'MS', label: 'Masters' },\r\n      { value: 'PhD', label: 'Doctorate' },\r\n    ];\r\n  };\r\n\r\n  const getOptionsSem = () => {\r\n    return [\r\n      { value: '', label: 'Select Semester' },\r\n      { value: 'Fall', label: 'Fall' },\r\n      { value: 'Spring', label: 'Spring' },\r\n      { value: 'Summer', label: 'Summer' },\r\n    ];\r\n  };\r\n\r\n  const getOptionsYear = () => {\r\n    return [\r\n      { value: '', label: 'Select Year' },\r\n      { value: '2023', label: '2023' },\r\n      { value: '2024', label: '2024' },\r\n      { value: '2025', label: '2025' },\r\n      { value: '2026', label: '2026' },\r\n      { value: '2027', label: '2027' },\r\n      { value: '2028', label: '2028' },\r\n      { value: '2029', label: '2029' },\r\n      { value: '2030', label: '2030' },\r\n    ];\r\n  };\r\n\r\n  const options = getOptions(); //Drop down menu\r\n  const optionsMajor = getOptionsMajor(); //Drop down menu\r\n  const optionsLevel = getOptionsLevel(); //Drop down menu\r\n  const optionsSem = getOptionsSem(); //Drop down menu\r\n  const optionsYear = getOptionsYear(); //Drop down menu\r\n\r\nconst Profile = () => {\r\n//   const userEmail = 'sam@umkc.edu';\r\n    const userEmail = 'luke@umkc.edu';\r\n    const [data, setData] = useState([]); //Firestore Document\r\n\r\n    const [studentAnchor, setStudentAnchor] = useState(null)\r\n    const closeStudentAnchor = () => {\r\n        setStudentAnchor(null);\r\n        window.location.reload();\r\n    };\r\n    const editStudent = (event) => {\r\n        setStudentAnchor(event.currentTarget);\r\n    }\r\n\r\n    const [csAnchor, setCSAnchor] = useState(null)\r\n    const closecsAnchor = () => {\r\n        setCSAnchor(null);\r\n        window.location.reload();\r\n    };\r\n    const editGradeCS = (event) => {\r\n        setCSAnchor(event.currentTarget);\r\n    }\r\n\r\n    const [eceAnchor, seteceAnchor] = useState(null)\r\n    const closeECEAnchor = () => {\r\n        seteceAnchor(null);\r\n        window.location.reload();\r\n    };\r\n    const editGradeECE = (event) => {\r\n        seteceAnchor(event.currentTarget);\r\n    }\r\n\r\n{/* Profile Edit */}\r\nconst handleChangeMajor = async (event) => {\r\n    let {value} = event.target\r\n    const docRef = db.collection('profile').doc(userEmail);\r\n    docRef.update({ Major: value }).then(() => {});        \r\n};\r\n\r\nconst handleChangeLevel = async (event) => {\r\n    let {value} = event.target\r\n    const docRef = db.collection('profile').doc(userEmail);\r\n    docRef.update({ Level: value }).then(() => {});        \r\n};\r\n\r\nconst handleChangeSem = async (event) => {\r\n    let {value} = event.target\r\n    const docRef = db.collection('profile').doc(userEmail);\r\n    docRef.update({ GradSem: value }).then(() => {});        \r\n};\r\n\r\nconst handleChangeYear = async (event) => {\r\n    let {value} = event.target\r\n    const docRef = db.collection('profile').doc(userEmail);\r\n    docRef.update({ GradYear: value }).then(() => {});        \r\n};\r\n\r\n{/* CS Edit */}\r\n    const handleChangeCS101 = async (event) => {\r\n        let {value} = event.target\r\n        const docRef = db.collection('profile').doc(userEmail);\r\n        docRef.update({ cs101: value }).then(() => {});        \r\n};\r\n\r\n    const handleChangeCS101L = async (event) => {\r\n        let {value} = event.target\r\n        const docRef = db.collection('profile').doc(userEmail);\r\n        docRef.update({ cs101l: value }).then(() => {});        \r\n    };\r\n\r\n    const handleChangeCS191 = async (event) => {\r\n        let {value} = event.target\r\n        const docRef = db.collection('profile').doc(userEmail);\r\n        docRef.update({ cs191: value }).then(() => {});        \r\n    };\r\n \r\n    const handleChangeCS201 = async (event) => {\r\n        let {value} = event.target\r\n        const docRef = db.collection('profile').doc(userEmail);\r\n        docRef.update({ cs201: value }).then(() => {});        \r\n    };\r\n \r\n    const handleChangeCS201L = async (event) => {\r\n        let {value} = event.target\r\n        const docRef = db.collection('profile').doc(userEmail);\r\n        docRef.update({ cs201l: value }).then(() => {});        \r\n    };\r\n \r\n    const handleChangeCS291 = async (event) => {\r\n        let {value} = event.target\r\n        const docRef = db.collection('profile').doc(userEmail);\r\n        docRef.update({ cs291: value }).then(() => {});        \r\n    };\r\n \r\n    const handleChangeCS303 = async (event) => {\r\n        let {value} = event.target\r\n        const docRef = db.collection('profile').doc(userEmail);\r\n        docRef.update({ cs303: value }).then(() => {});        \r\n    };\r\n \r\n    const handleChangeCS320 = async (event) => {\r\n        let {value} = event.target\r\n        const docRef = db.collection('profile').doc(userEmail);\r\n        docRef.update({ cs320: value }).then(() => {});        \r\n    };\r\n \r\n    const handleChangeCS349 = async (event) => {\r\n        let {value} = event.target\r\n        const docRef = db.collection('profile').doc(userEmail);\r\n        docRef.update({ cs349: value }).then(() => {});        \r\n    };\r\n \r\n    const handleChangeCS394R = async (event) => {\r\n        let {value} = event.target\r\n        const docRef = db.collection('profile').doc(userEmail);\r\n        docRef.update({ cs394r: value }).then(() => {});        \r\n    };\r\n \r\n    const handleChangeCS404 = async (event) => {\r\n        let {value} = event.target\r\n        const docRef = db.collection('profile').doc(userEmail);\r\n        docRef.update({ cs404: value }).then(() => {});        \r\n    };\r\n \r\n    const handleChangeCS441 = async (event) => {\r\n        let {value} = event.target\r\n        const docRef = db.collection('profile').doc(userEmail);\r\n        docRef.update({ cs441: value }).then(() => {});        \r\n    };\r\n \r\n    const handleChangeCS449 = async (event) => {\r\n        let {value} = event.target\r\n        const docRef = db.collection('profile').doc(userEmail);\r\n        docRef.update({ cs449: value }).then(() => {});        \r\n    };\r\n \r\n    const handleChangeCS456 = async (event) => {\r\n        let {value} = event.target\r\n        const docRef = db.collection('profile').doc(userEmail);\r\n        docRef.update({ cs465: value }).then(() => {});        \r\n    };\r\n \r\n    const handleChangeCS457 = async (event) => {\r\n        let {value} = event.target\r\n        const docRef = db.collection('profile').doc(userEmail);\r\n        docRef.update({ cs457: value }).then(() => {});        \r\n    };\r\n \r\n    const handleChangeCS458 = async (event) => {\r\n        let {value} = event.target\r\n        const docRef = db.collection('profile').doc(userEmail);\r\n        docRef.update({ cs458: value }).then(() => {});        \r\n    };\r\n \r\n    const handleChangeCS461 = async (event) => {\r\n        let {value} = event.target\r\n        const docRef = db.collection('profile').doc(userEmail);\r\n        docRef.update({ cs461: value }).then(() => {});        \r\n    };\r\n \r\n    const handleChangeCS465R = async (event) => {\r\n        let {value} = event.target\r\n        const docRef = db.collection('profile').doc(userEmail);\r\n        docRef.update({ cs465r: value }).then(() => {});        \r\n    };\r\n \r\n    const handleChangeCS5520 = async (event) => {\r\n        let {value} = event.target\r\n        const docRef = db.collection('profile').doc(userEmail);\r\n        docRef.update({ cs5520: value }).then(() => {});        \r\n    };\r\n \r\n    const handleChangeCS5525 = async (event) => {\r\n        let {value} = event.target\r\n        const docRef = db.collection('profile').doc(userEmail);\r\n        docRef.update({ cs5525: value }).then(() => {});        \r\n    };\r\n \r\n    const handleChangeCS5552A = async (event) => {\r\n        let {value} = event.target\r\n        const docRef = db.collection('profile').doc(userEmail);\r\n        docRef.update({ cs5552a: value }).then(() => {});        \r\n    };\r\n \r\n    const handleChangeCS5565 = async (event) => {\r\n        let {value} = event.target\r\n        const docRef = db.collection('profile').doc(userEmail);\r\n        docRef.update({ cs5565: value }).then(() => {});        \r\n    };\r\n \r\n    const handleChangeCS5573 = async (event) => {\r\n        let {value} = event.target\r\n        const docRef = db.collection('profile').doc(userEmail);\r\n        docRef.update({ cs5573: value }).then(() => {});        \r\n    };\r\n \r\n    const handleChangeCS5590PA = async (event) => {\r\n        let {value} = event.target\r\n        const docRef = db.collection('profile').doc(userEmail);\r\n        docRef.update({ cs5590pa: value }).then(() => {});        \r\n    };\r\n \r\n    const handleChangeCS5592 = async (event) => {\r\n        let {value} = event.target\r\n        const docRef = db.collection('profile').doc(userEmail);\r\n        docRef.update({ cs5592: value }).then(() => {});        \r\n    };\r\n \r\n    const handleChangeCS5596A = async (event) => {\r\n        let {value} = event.target\r\n        const docRef = db.collection('profile').doc(userEmail);\r\n        docRef.update({ cs5596a: value }).then(() => {});        \r\n    };\r\n \r\n    const handleChangeCS5596B = async (event) => {\r\n        let {value} = event.target\r\n        const docRef = db.collection('profile').doc(userEmail);\r\n        docRef.update({ cs5596b: value }).then(() => {});        \r\n    }; \r\n\r\n\r\n{/* ECE Edit */}\r\n    const handleChangeECE216 = async (event) => {\r\n        let {value} = event.target\r\n        const docRef = db.collection('profile').doc(userEmail);\r\n        docRef.update({ ece216: value }).then(() => {});        \r\n    };\r\n\r\n    const handleChangeECE226 = async (event) => {\r\n        let {value} = event.target\r\n        const docRef = db.collection('profile').doc(userEmail);\r\n        docRef.update({ ece226: value }).then(() => {});        \r\n    };\r\n\r\n    const handleChangeECE228 = async (event) => {\r\n        let {value} = event.target\r\n        const docRef = db.collection('profile').doc(userEmail);\r\n        docRef.update({ ece228: value }).then(() => {});        \r\n    };\r\n\r\n    const handleChangeECE241 = async (event) => {\r\n        let {value} = event.target\r\n        const docRef = db.collection('profile').doc(userEmail);\r\n        docRef.update({ ece241: value }).then(() => {});        \r\n    };\r\n\r\n    const handleChangeECE276 = async (event) => {\r\n        let {value} = event.target\r\n        const docRef = db.collection('profile').doc(userEmail);\r\n        docRef.update({ ece276: value }).then(() => {});        \r\n    };\r\n\r\n    const handleChangeECE302 = async (event) => {\r\n        let {value} = event.target\r\n        const docRef = db.collection('profile').doc(userEmail);\r\n        docRef.update({ ece302: value }).then(() => {});        \r\n    };\r\n\r\n    const handleChangeECE330 = async (event) => {\r\n        let {value} = event.target\r\n        const docRef = db.collection('profile').doc(userEmail);\r\n        docRef.update({ ece330: value }).then(() => {});        \r\n    };\r\n\r\n    const handleChangeECE341r = async (event) => {\r\n        let {value} = event.target\r\n        const docRef = db.collection('profile').doc(userEmail);\r\n        docRef.update({ ece341r: value }).then(() => {});        \r\n    };\r\n\r\n    const handleChangeECE428r = async (event) => {\r\n        let {value} = event.target\r\n        const docRef = db.collection('profile').doc(userEmail);\r\n        docRef.update({ ece428r: value }).then(() => {});        \r\n    };\r\n \r\n    const handleChangeECE458 = async (event) => {\r\n        let {value} = event.target\r\n        const docRef = db.collection('profile').doc(userEmail);\r\n        docRef.update({ ece458: value }).then(() => {});        \r\n    };\r\n \r\n    const handleChangeECE466 = async (event) => {\r\n        let {value} = event.target\r\n        const docRef = db.collection('profile').doc(userEmail);\r\n        docRef.update({ ece466: value }).then(() => {});        \r\n    };\r\n \r\n    const handleChangeECE486 = async (event) => {\r\n        let {value} = event.target\r\n        const docRef = db.collection('profile').doc(userEmail);\r\n        docRef.update({ ece486: value }).then(() => {});        \r\n    };\r\n \r\n    const handleChangeECE477 = async (event) => {\r\n        let {value} = event.target\r\n        const docRef = db.collection('profile').doc(userEmail);\r\n        docRef.update({ ece477: value }).then(() => {});        \r\n    };\r\n \r\n    const handleChangeECE5558 = async (event) => {\r\n        let {value} = event.target\r\n        const docRef = db.collection('profile').doc(userEmail);\r\n        docRef.update({ ece5558: value }).then(() => {});        \r\n    };\r\n \r\n    const handleChangeECE5560 = async (event) => {\r\n        let {value} = event.target\r\n        const docRef = db.collection('profile').doc(userEmail);\r\n        docRef.update({ ece5560: value }).then(() => {});        \r\n    };\r\n \r\n    const handleChangeECE5567 = async (event) => {\r\n        let {value} = event.target\r\n        const docRef = db.collection('profile').doc(userEmail);\r\n        docRef.update({ ece5567: value }).then(() => {});        \r\n    };\r\n \r\n    const handleChangeECE5577 = async (event) => {\r\n        let {value} = event.target\r\n        const docRef = db.collection('profile').doc(userEmail);\r\n        docRef.update({ ece5577: value }).then(() => {});        \r\n    };\r\n \r\n    const handleChangeECE5578 = async (event) => {\r\n        let {value} = event.target\r\n        const docRef = db.collection('profile').doc(userEmail);\r\n        docRef.update({ ece5578: value }).then(() => {});        \r\n    };\r\n \r\n    const handleChangeECE5586 = async (event) => {\r\n        let {value} = event.target\r\n        const docRef = db.collection('profile').doc(userEmail);\r\n        docRef.update({ ece5586: value }).then(() => {});        \r\n    };\r\n \r\n    const handleChangeIT222 = async (event) => {\r\n        let {value} = event.target\r\n        const docRef = db.collection('profile').doc(userEmail);\r\n        docRef.update({ it222: value }).then(() => {});        \r\n    };\r\n \r\n    const handleChangeIT321 = async (event) => {\r\n        let {value} = event.target\r\n        const docRef = db.collection('profile').doc(userEmail);\r\n        docRef.update({ it321: value }).then(() => {});        \r\n    };\r\n \r\n {/* */}   \r\n    useEffect(() => {\r\n        console.log('Searching')\r\n        db.collection('profile').doc(userEmail).get()\r\n        .then(doc => {\r\n            if (doc.exists) {\r\n                console.log('Found Doc')\r\n                setData(doc.data());\r\n            } else {\r\n            console.log('No such document!');\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.log('Error getting document:', error);\r\n        });\r\n    }, []);\r\n\r\n  return (\r\n    <>\r\n{/*  Profile section */}\r\n        <CssBaseline />\r\n        <main>\r\n            <div>\r\n                <Container maxWidth='lg'>\r\n                    <Typography variant='h4' align='center' color='textprimary' gutterBottom='true'>\r\n                        Student Information:\r\n                    </Typography>\r\n                    <Divider variant='inset' />\r\n                    <Grid container spacing={5} justifyContent='center' columns={5}>\r\n                        <Grid item>\r\n                            <Typography variant='p' align='center' color='textSecondary' paragraph>\r\n                                <p>Student Name: {data.LName}, {data.FName}</p>\r\n                                <p>UMKC Email: {data.Email}</p>\r\n                                <p>Student ID: {data.IDnum}</p>\r\n                                <p>Major: {data.Major}</p>\r\n                                <p>Current Level: {data.Level}</p>\r\n                                <p>Graduation: {data.GradSem} {data.GradYear}</p>\r\n                                <p>Current GPA: {data.GPA}</p>\r\n                            </Typography>\r\n                        </Grid>\r\n                            <Grid button justifyContent='right'>\r\n                                <br></br>\r\n                                <br></br>\r\n                                <Button variant=\"contained\" onClick={editStudent}>Edit</Button>\r\n                            </Grid>\r\n                    </Grid>\r\n                </Container>\r\n\r\n                <br></br>\r\n                <br></br>\r\n\r\n{/*  Grade section */}\r\n                <Container>\r\n                    <Typography variant='h4' align='center' color='textprimary' gutterBottom='true'>\r\n                            Grades:\r\n                        </Typography>\r\n                        <Divider variant='inset'/>\r\n                        <div>\r\n                            <Grid container spacing={5} justifyContent='center' columns={5}>\r\n                                <Grid item>\r\n                                    <Typography variant='p' align='right' color='textSecondary' paragraph>\r\n                                        <p>CS 101:  {data.cs101}</p>\r\n                                        <p>CS 101L:  {data.cs101l}</p>\r\n                                        <p>CS 191:  {data.cs191}</p> \r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Typography variant='p' align='right' color='textSecondary' paragraph>\r\n                                        <p>CS 201R: {data.cs201r}</p>\r\n                                        <p>CS 201L: {data.cs201l}</p>\r\n                                        <p>CS 291: {data.cs291}</p> \r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Typography variant='p' align='right' color='textSecondary' paragraph>\r\n                                        <p>CS 303: {data.cs303}</p>\r\n                                        <p>CS 320: {data.cs320}</p>\r\n                                        <p>CS 349: {data.cs349}</p>\r\n                                        <p>CS 394R: {data.cs394r}</p>\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Typography variant='p' align='right' color='textSecondary' paragraph>\r\n                                        <p>CS 404: {data.cs404}</p>\r\n                                        <p>CS 441: {data.cs441}</p>\r\n                                        <p>CS 449: {data.cs449}</p>\r\n                                        <p>CS 456: {data.cs456}</p>\r\n                                        <p>CS 457: {data.cs457}</p>\r\n                                        <p>CS 458: {data.cs458}</p> \r\n                                        <p>CS 461: {data.cs461}</p>\r\n                                        <p>CS 465R: {data.cs465r}</p>\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Typography variant='p' align='right' color='textSecondary' paragraph>\r\n                                        <p>CS 5520: {data.cs5520}</p>\r\n                                        <p>CS 5525: {data.cs5525}</p>\r\n                                        <p>CS 5552A: {data.cs5552a}</p>\r\n                                        <p>CS 5565: {data.cs5565}</p>\r\n                                        <p>CS 5573: {data.cs5573}</p>\r\n                                        <p>CS 5590PA: {data.cs5590pa}</p> \r\n                                        <p>CS 5592: {data.cs5592}</p>\r\n                                        <p>CS 5596A: {data.cs5596a}</p>\r\n                                        <p>CS 5596B: {data.cs5596b}</p> \r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid button justifyContent='right'>\r\n                                    <br></br>\r\n                                    <br></br>\r\n                                    <Button variant=\"contained\" onClick={editGradeCS}>Edit</Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container spacing={5} justifyContent='center' columns={5}>\r\n                                <Grid item>\r\n                                    <Typography variant='p' align='right' color='textSecondary' paragraph>\r\n                                        <p>ECE 216: {data.ece216}</p>\r\n                                        <p>ECE 226: {data.ece226}</p>\r\n                                        <p>ECE 228: {data.ece228}</p> \r\n                                        <p>ECE 241: {data.ece241}</p>\r\n                                        <p>ECE 276: {data.ece276}</p> \r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Typography variant='p' align='right' color='textSecondary' paragraph>\r\n                                        <p>ECE 302: {data.ece302}</p>\r\n                                        <p>ECE 330: {data.ece330}</p>\r\n                                        <p>ECE 341R: {data.ece341r}</p> \r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Typography variant='p' align='right' color='textSecondary' paragraph>\r\n                                        <p>ECE 428R: {data.ece428r}</p>\r\n                                        <p>ECE 458: {data.ece458}</p>\r\n                                        <p>ECE 466: {data.ece466}</p> \r\n                                        <p>ECE 477: {data.ece477}</p>\r\n                                        <p>ECE 486: {data.ece486}</p> \r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Typography variant='p' align='right' color='textSecondary' paragraph>\r\n                                        <p>ECE 5558: {data.ece5558}</p>\r\n                                        <p>ECE 5560: {data.ece5560}</p>\r\n                                        <p>ECE 5567: {data.ece5567}</p> \r\n                                        <p>ECE 5577: {data.ece5577}</p>\r\n                                        <p>ECE 5578: {data.ece5578}</p> \r\n                                        <p>ECE 5586: {data.ece5586}</p> \r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Typography variant='p' align='right' color='textSecondary' paragraph>\r\n                                        <p>IT 222: {data.it222}</p>\r\n                                        <p>IT 321: {data.it321}</p>\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid>\r\n                                    <br></br>\r\n                                    <br></br>\r\n                                    <Button variant=\"contained\" onClick={editGradeECE}>Edit</Button>\r\n                                </Grid>\r\n\r\n\r\n{/* Popover Section Profile */}\r\n    <Grid>\r\n        <Popover\r\n            open={Boolean(studentAnchor)} \r\n            anchorEl={studentAnchor} \r\n            anchorOrigin={{\r\n                vertical: 'bottom', \r\n                horizontal: 'right'}}\r\n            transformOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'right'\r\n            }}>\r\n            <Typography variant='p'>\r\n                 <div style={{\r\n                     width: '400px',\r\n                     height: '500px'\r\n                 }}>\r\n                    <Grid container spacing={5} justifyContent='center' columns={5}>\r\n                        <Grid item>\r\n                            <Typography variant='p' align='justify' color='textSecondary' paragraph fontSize= \"6\">\r\n\r\n                                <p>Major: {data.Major}</p>\r\n                                <select onChange={handleChangeMajor}>\r\n                                    {optionsMajor.map((option) => (\r\n                                        <option key={option.value} value={option.value}>\r\n                                            {option.label}\r\n                                        </option>\r\n                                ))}</select>\r\n\r\n                                <p>Current Level: {data.Level}</p>\r\n                                <select onChange={handleChangeLevel}>\r\n                                    {optionsLevel.map((option) => (\r\n                                        <option key={option.value} value={option.value}>\r\n                                            {option.label}\r\n                                        </option>\r\n                                ))}</select>\r\n\r\n                                <p>Graduation Semester: {data.GradSem}</p>\r\n                                <select onChange={handleChangeSem}>\r\n                                    {optionsSem.map((option) => (\r\n                                        <option key={option.value} value={option.value}>\r\n                                            {option.label}\r\n                                        </option>\r\n                                ))}</select>\r\n\r\n                                <p>Graduation Year: {data.GradYear}</p>\r\n                                <select onChange={handleChangeYear}>\r\n                                    {optionsYear.map((option) => (\r\n                                        <option key={option.value} value={option.value}>\r\n                                            {option.label}\r\n                                        </option>\r\n                                ))}</select>\r\n\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid button justifyContent='right'>\r\n                            <br></br>\r\n                            <br></br>\r\n                            <Button variant=\"contained\" onClick={closeStudentAnchor}> Close </Button>\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n                </div>\r\n\r\n            </Typography>\r\n        </Popover>\r\n\r\n    </Grid>\r\n\r\n\r\n {/* Popover Section CS */}\r\n    <Grid button justifyContent='right'>\r\n        <Popover \r\n            open={Boolean(csAnchor)} \r\n            anchorEl={csAnchor} \r\n            anchorOrigin={{\r\n                vertical: 'bottom', \r\n                horizontal: 'right'}}\r\n            transformOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'right'\r\n            }}>\r\n            <Typography variant='p'>\r\n                <div style={{\r\n                    width: '825px',\r\n                    height: '800px'\r\n                }}>\r\n                    <Grid container spacing={5} justifyContent='center' columns={5}>\r\n                        <Grid item>\r\n                            <Typography variant='p' align='justify' color='textSecondary' paragraph fontSize= \"6\">\r\n\r\n                                <p>CS 101: {data.CS101}</p>\r\n                                <select onChange={handleChangeCS101}>\r\n                                    {options.map((option) => (\r\n                                        <option key={option.value} value={option.value}>\r\n                                            {option.label}\r\n                                        </option>\r\n                                ))}</select>\r\n\r\n                                <p>CS 101L: {data.cs101l}</p>\r\n                                <select onChange={handleChangeCS101L}>\r\n                                    {options.map((option) => (\r\n                                        <option key={option.value} value={option.value}>\r\n                                            {option.label}\r\n                                        </option>\r\n                                ))}</select>\r\n\r\n                                <p>CS 191: {data.cs191}</p>\r\n                                <select onChange={handleChangeCS191}>\r\n                                    {options.map((option) => (\r\n                                        <option key={option.value} value={option.value}>\r\n                                            {option.label}\r\n                                        </option>\r\n                                ))}</select> \r\n\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography variant='p' align='justify' color='textSecondary' paragraph>\r\n                                <p>CS 201: {data.cs201}</p>\r\n                                <select onChange={handleChangeCS201}>\r\n                                    {options.map((option) => (\r\n                                        <option key={option.value} value={option.value}>\r\n                                            {option.label}\r\n                                        </option>\r\n                                ))}</select> \r\n\r\n                                <p>CS 201L: {data.cs201l}</p>   \r\n                                    <select onChange={handleChangeCS201L}>\r\n                                    {options.map((option) => (\r\n                                        <option key={option.value} value={option.value}>\r\n                                            {option.label}\r\n                                        </option>\r\n                                ))}</select> \r\n\r\n                                <p>CS 291: {data.cs291}</p> \r\n                                <select onChange={handleChangeCS291}>\r\n                                    {options.map((option) => (\r\n                                        <option key={option.value} value={option.value}>\r\n                                            {option.label}\r\n                                        </option>\r\n                                ))}</select> \r\n\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography variant='p' align='justify' color='textSecondary' paragraph>\r\n                                <p>CS 303: {data.cs303}</p>\r\n                                <select onChange={handleChangeCS303}>\r\n                                    {options.map((option) => (\r\n                                        <option key={option.value} value={option.value}>\r\n                                            {option.label}\r\n                                        </option>\r\n                                ))}</select> \r\n\r\n                                <p>CS 320: {data.cs320}</p>\r\n                                <select onChange={handleChangeCS320}>\r\n                                    {options.map((option) => (\r\n                                        <option key={option.value} value={option.value}>\r\n                                            {option.label}\r\n                                        </option>\r\n                                ))}</select> \r\n                                \r\n                                <p>CS 349: {data.cs349}</p> \r\n                                <select onChange={handleChangeCS349}>\r\n                                    {options.map((option) => (\r\n                                        <option key={option.value} value={option.value}>\r\n                                            {option.label}\r\n                                        </option>\r\n                                ))}</select> \r\n\r\n                                <p>CS 394R: {data.cs394r}</p>\r\n                                <select onChange={handleChangeCS394R}>\r\n                                    {options.map((option) => (\r\n                                        <option key={option.value} value={option.value}>\r\n                                            {option.label}\r\n                                        </option>\r\n                                ))}</select> \r\n\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography variant='p' align='justify' color='textSecondary' paragraph>\r\n                                <p>CS 404: {data.cs404}</p>\r\n                                <select onChange={handleChangeCS404}>\r\n                                    {options.map((option) => (\r\n                                        <option key={option.value} value={option.value}>\r\n                                            {option.label}\r\n                                        </option>\r\n                                ))}</select> \r\n\r\n                                <p>CS 441: {data.cs441}</p>\r\n                                <select onChange={handleChangeCS441}>\r\n                                    {options.map((option) => (\r\n                                        <option key={option.value} value={option.value}>\r\n                                            {option.label}\r\n                                        </option>\r\n                                ))}</select> \r\n\r\n                                <p>CS 449: {data.cs449}</p> \r\n                                <select onChange={handleChangeCS449}>\r\n                                    {options.map((option) => (\r\n                                        <option key={option.value} value={option.value}>\r\n                                            {option.label}\r\n                                        </option>\r\n                                ))}</select> \r\n\r\n                                <p>CS 456: {data.cs465}</p>\r\n                                <select onChange={handleChangeCS456}>\r\n                                    {options.map((option) => (\r\n                                        <option key={option.value} value={option.value}>\r\n                                            {option.label}\r\n                                        </option>\r\n                                ))}</select> \r\n\r\n                                <p>CS 457: {data.cs457}</p> \r\n                                <select onChange={handleChangeCS457}>\r\n                                    {options.map((option) => (\r\n                                        <option key={option.value} value={option.value}>\r\n                                            {option.label}\r\n                                        </option>\r\n                                ))}</select> \r\n\r\n                                <p>CS 458: {data.cs458}</p> \r\n                                <select onChange={handleChangeCS458}>\r\n                                    {options.map((option) => (\r\n                                        <option key={option.value} value={option.value}>\r\n                                            {option.label}\r\n                                        </option>\r\n                                ))}</select> \r\n\r\n                                <p>CS 461: {data.cs461}</p> \r\n                                <select onChange={handleChangeCS461}>\r\n                                    {options.map((option) => (\r\n                                        <option key={option.value} value={option.value}>\r\n                                            {option.label}\r\n                                        </option>\r\n                                ))}</select> \r\n\r\n                                <p>CS 465R: {data.cs465r}</p> \r\n                                <select onChange={handleChangeCS465R}>\r\n                                    {options.map((option) => (\r\n                                        <option key={option.value} value={option.value}>\r\n                                            {option.label}\r\n                                        </option>\r\n                                ))}</select> \r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography variant='p' align='justify' color='textSecondary' paragraph>\r\n                                <p>CS 5520: {data.cs5520}</p>\r\n                                <select onChange={handleChangeCS5520}>\r\n                                    {options.map((option) => (\r\n                                        <option key={option.value} value={option.value}>\r\n                                            {option.label}\r\n                                        </option>\r\n                                ))}</select> \r\n\r\n                                <p>CS 5525: {data.cs5525}</p>\r\n                                <select onChange={handleChangeCS5525}>\r\n                                    {options.map((option) => (\r\n                                        <option key={option.value} value={option.value}>\r\n                                            {option.label}\r\n                                        </option>\r\n                                ))}</select> \r\n\r\n                                <p>CS 5552A: {data.cs5552a}</p>\r\n                                <select onChange={handleChangeCS5552A}>\r\n                                    {options.map((option) => (\r\n                                        <option key={option.value} value={option.value}>\r\n                                            {option.label}\r\n                                        </option>\r\n                                ))}</select> \r\n                                    \r\n                                    <p>CS 5565: {data.cs5565}</p>\r\n                                <select onChange={handleChangeCS5565}>\r\n                                    {options.map((option) => (\r\n                                        <option key={option.value} value={option.value}>\r\n                                            {option.label}\r\n                                        </option>\r\n                                ))}</select> \r\n                                    \r\n                                    <p>CS 5573: {data.cs5573}</p>\r\n                                <select onChange={handleChangeCS5573}>\r\n                                    {options.map((option) => (\r\n                                        <option key={option.value} value={option.value}>\r\n                                            {option.label}\r\n                                        </option>\r\n                                ))}</select> \r\n                                    \r\n                                    <p>CS 5590PA: {data.cs5590pa}</p>\r\n                                <select onChange={handleChangeCS5590PA}>\r\n                                    {options.map((option) => (\r\n                                        <option key={option.value} value={option.value}>\r\n                                            {option.label}\r\n                                        </option>\r\n                                ))}</select> \r\n                                    \r\n                                    <p>CS 5592: {data.cs5592}</p>\r\n                                <select onChange={handleChangeCS5592}>\r\n                                    {options.map((option) => (\r\n                                        <option key={option.value} value={option.value}>\r\n                                            {option.label}\r\n                                        </option>\r\n                                ))}</select> \r\n                                    \r\n                                    <p>CS 5596A: {data.cs5596a}</p>\r\n                                <select onChange={handleChangeCS5596A}>\r\n                                    {options.map((option) => (\r\n                                        <option key={option.value} value={option.value}>\r\n                                            {option.label}\r\n                                        </option>\r\n                                ))}</select> \r\n                                    \r\n                                    <p>CS 5596B: {data.cs5596b}</p>\r\n                                <select onChange={handleChangeCS5596B}>\r\n                                    {options.map((option) => (\r\n                                        <option key={option.value} value={option.value}>\r\n                                            {option.label}\r\n                                        </option>\r\n                                ))}</select> \r\n\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid button justifyContent='right'>\r\n                            <br></br>\r\n                            <Button variant=\"contained\" onClick={closecsAnchor}> Close </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </Typography>\r\n        </Popover>\r\n    </Grid>                                \r\n\r\n{/* Popover Section ECE/IT */}\r\n<Grid button justifyContent='right'>\r\n    <br></br>\r\n    {/* <Button variant=\"contained\" onClick={editGradeECE}>Edit</Button> */}\r\n    <Popover \r\n    open={Boolean(eceAnchor)} \r\n    anchorEl={eceAnchor} \r\n    anchorOrigin={{\r\n        vertical: 'bottom', \r\n        horizontal: 'right'}}\r\n    transformOrigin={{\r\n        vertical: 'bottom',\r\n        horizontal: 'right'\r\n    }}>\r\n        <Typography variant='p'>\r\n            <div style={{\r\n                width: '825px',\r\n                height: '550px'\r\n            }}>\r\n                <Grid container spacing={5} justifyContent='center' columns={5}>\r\n                    <Grid item>\r\n                        <Typography variant='p' align='justify' color='textSecondary' paragraph fontSize= \"6\">\r\n                            <p>ECE 216: {data.ece216}</p>\r\n                            <select onChange={handleChangeECE216}>\r\n                                {options.map((option) => (\r\n                                    <option key={option.value} value={option.value}>\r\n                                        {option.label}\r\n                                    </option>\r\n                            ))}</select>\r\n\r\n                            <p>ECE 226: {data.ece226}</p>\r\n                            <select onChange={handleChangeECE226}>\r\n                                {options.map((option) => (\r\n                                    <option key={option.value} value={option.value}>\r\n                                        {option.label}\r\n                                    </option>\r\n                            ))}</select>\r\n\r\n                            <p>ECE 228: {data.ece228}</p>\r\n                            <select onChange={handleChangeECE228}>\r\n                                {options.map((option) => (\r\n                                    <option key={option.value} value={option.value}>\r\n                                        {option.label}\r\n                                    </option>\r\n                            ))}</select> \r\n\r\n                            <p>ECE 241: {data.ece241}</p>\r\n                            <select onChange={handleChangeECE241}>\r\n                                {options.map((option) => (\r\n                                    <option key={option.value} value={option.value}>\r\n                                        {option.label}\r\n                                    </option>\r\n                            ))}</select>\r\n\r\n                            <p>ECE 276: {data.ece276}</p>\r\n                            <select onChange={handleChangeECE276}>\r\n                                {options.map((option) => (\r\n                                    <option key={option.value} value={option.value}>\r\n                                        {option.label}\r\n                                    </option>\r\n                            ))}</select> \r\n\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Typography variant='p' align='justify' color='textSecondary' paragraph>\r\n                            <p>ECE 302: {data.ece302}</p>\r\n                            <select onChange={handleChangeECE302}>\r\n                                {options.map((option) => (\r\n                                    <option key={option.value} value={option.value}>\r\n                                        {option.label}\r\n                                    </option>\r\n                            ))}</select> \r\n\r\n                            <p>ECE 330: {data.ece330}</p>   \r\n                                <select onChange={handleChangeECE330}>\r\n                                {options.map((option) => (\r\n                                    <option key={option.value} value={option.value}>\r\n                                        {option.label}\r\n                                    </option>\r\n                            ))}</select> \r\n\r\n                            <p>ECE 341R: {data.ece341r}</p> \r\n                            <select onChange={handleChangeECE341r}>\r\n                                {options.map((option) => (\r\n                                    <option key={option.value} value={option.value}>\r\n                                        {option.label}\r\n                                    </option>\r\n                            ))}</select> \r\n\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Typography variant='p' align='justify' color='textSecondary' paragraph>\r\n                            <p>ECE 428R: {data.ece428r}</p>\r\n                            <select onChange={handleChangeECE428r}>\r\n                                {options.map((option) => (\r\n                                    <option key={option.value} value={option.value}>\r\n                                        {option.label}\r\n                                    </option>\r\n                            ))}</select> \r\n\r\n                            <p>ECE 458: {data.ece458}</p>\r\n                            <select onChange={handleChangeECE458}>\r\n                                {options.map((option) => (\r\n                                    <option key={option.value} value={option.value}>\r\n                                        {option.label}\r\n                                    </option>\r\n                            ))}</select> \r\n                            \r\n                            <p>ECE 466: {data.ece466}</p> \r\n                            <select onChange={handleChangeECE466}>\r\n                                {options.map((option) => (\r\n                                    <option key={option.value} value={option.value}>\r\n                                        {option.label}\r\n                                    </option>\r\n                            ))}</select> \r\n\r\n                            <p>ECE 477: {data.ece477}</p>\r\n                            <select onChange={handleChangeECE477}>\r\n                                {options.map((option) => (\r\n                                    <option key={option.value} value={option.value}>\r\n                                        {option.label}\r\n                                    </option>\r\n                            ))}</select> \r\n\r\n                            <p>ECE 486: {data.ece486}</p> \r\n                            <select onChange={handleChangeECE486}>\r\n                                {options.map((option) => (\r\n                                    <option key={option.value} value={option.value}>\r\n                                        {option.label}\r\n                                    </option>\r\n                            ))}</select> \r\n\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Typography variant='p' align='justify' color='textSecondary' paragraph>\r\n                            <p>ECE 5558: {data.ece5558}</p>\r\n                            <select onChange={handleChangeECE5558}>\r\n                                {options.map((option) => (\r\n                                    <option key={option.value} value={option.value}>\r\n                                        {option.label}\r\n                                    </option>\r\n                            ))}</select> \r\n\r\n                            <p>ECE 5560: {data.ece5560}</p>\r\n                            <select onChange={handleChangeECE5560}>\r\n                                {options.map((option) => (\r\n                                    <option key={option.value} value={option.value}>\r\n                                        {option.label}\r\n                                    </option>\r\n                            ))}</select> \r\n\r\n                            <p>ECE 5567: {data.ece5567}</p> \r\n                            <select onChange={handleChangeECE5567}>\r\n                                {options.map((option) => (\r\n                                    <option key={option.value} value={option.value}>\r\n                                        {option.label}\r\n                                    </option>\r\n                            ))}</select> \r\n\r\n                            <p>ECE 5577: {data.cs5577}</p>\r\n                            <select onChange={handleChangeECE5577}>\r\n                                {options.map((option) => (\r\n                                    <option key={option.value} value={option.value}>\r\n                                        {option.label}\r\n                                    </option>\r\n                            ))}</select> \r\n\r\n                            <p>ECE 5578: {data.cs5578}</p> \r\n                            <select onChange={handleChangeECE5578}>\r\n                                {options.map((option) => (\r\n                                    <option key={option.value} value={option.value}>\r\n                                        {option.label}\r\n                                    </option>\r\n                            ))}</select> \r\n\r\n                            <p>ECE 5586: {data.cs5586}</p> \r\n                            <select onChange={handleChangeECE5586}>\r\n                                {options.map((option) => (\r\n                                    <option key={option.value} value={option.value}>\r\n                                        {option.label}\r\n                                    </option>\r\n                            ))}</select> \r\n\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Typography variant='p' align='justify' color='textSecondary' paragraph>\r\n                            <p>IT 222: {data.it222}</p>\r\n                            <select onChange={handleChangeIT222}>\r\n                                {options.map((option) => (\r\n                                    <option key={option.value} value={option.value}>\r\n                                        {option.label}\r\n                                    </option>\r\n                            ))}</select> \r\n\r\n                            <p>IT 321: {data.it321}</p>\r\n                            <select onChange={handleChangeIT321}>\r\n                                {options.map((option) => (\r\n                                    <option key={option.value} value={option.value}>\r\n                                        {option.label}\r\n                                    </option>\r\n                            ))}</select> \r\n\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid button justifyContent='right'>\r\n                        <br></br>\r\n                        <Button variant=\"contained\" onClick={closeECEAnchor}> Close </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        </Typography>\r\n    </Popover>\r\n</Grid>\r\n</Grid>\r\n</div>\r\n</Container>\r\n\r\n                <br></br>\r\n                <br></br>\r\n\r\n                <Container maxWidth='lg'>\r\n                    <Typography variant='h4' align='center' color='textprimary' gutterBottom='true'>\r\n                        Files:\r\n                    </Typography>\r\n                    <Divider variant='inset' />\r\n                    <Grid container spacing={5} justifyContent='center' columns={5} direction='column'>\r\n                        <Grid item>\r\n                            <Typography variant='p' align='center' color='textSecondary' paragraph>\r\n                                <p>Transcript: </p>\r\n                                <Button variant=\"contained\">Upload Transcript</Button>\r\n                            </Typography>\r\n                        </Grid>\r\n\r\n                        <Grid item>\r\n                            <Typography variant='p' align='center' color='textSecondary' paragraph>\r\n                                <p>GTA Certification:</p>\r\n                            </Typography>\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n                </Container>\r\n            </div>\r\n        </main>\r\n\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nexport default Profile","C:\\Users\\Kaleb\\source\\repos\\Fighting-Mongooses\\src\\firebase.js",[],[],"C:\\Users\\Kaleb\\source\\repos\\Fighting-Mongooses\\src\\components\\TestHeader.js",["109"],[],"import * as React from \"react\";\r\n\r\n// importing material UI components\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Button from \"@mui/material/Button\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Header() {\r\nreturn (\r\n\t<AppBar position=\"static\">\r\n\t\t<Toolbar style={{ backgroundColor: '#005293', color: 'white' }}>\r\n\t\t<IconButton\r\n\t\t\tsize=\"large\"\r\n\t\t\tedge=\"start\"\r\n\t\t\tstyle={{ backgroundColor: '#005293', color: 'white' }}\r\n\t\t\taria-label=\"menu\"\r\n\t\t\tsx={{ mr: 2 }}\r\n\t\t>\r\n\t\t\t<MenuIcon />\r\n\t\t</IconButton>\r\n\t\t<Typography variant=\"h6\"\r\n\t\t\tcomponent=\"div\" sx={{ flexGrow: 1 }}>\r\n\t\t\tJob Management Page\r\n\t\t</Typography>\r\n\t\t<Button \r\n\t\tstyle={{ backgroundColor: '#005293', color: 'white' }}\r\n\t\tcomponent={Link} to=\"/signup\"\r\n\t\t>Logout</Button>\r\n\t\t</Toolbar>\r\n\t</AppBar>\r\n);\r\n}\r\n","C:\\Users\\Kaleb\\source\\repos\\Fighting-Mongooses\\src\\components\\Welcome.js",["110","111","112","113","114","115","116","117","118"],[],"import * as React from 'react';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport { red } from '@mui/material/colors';\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport ShareIcon from '@mui/icons-material/Share';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport Divider from '@mui/material/Divider';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport List from '@mui/material/List';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport Container from '@mui/material/Container';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport { styled, alpha } from '@mui/material/styles';\r\nimport InputBase from '@mui/material/InputBase';\r\nimport { Link } from 'react-router-dom';\r\nimport umkcLogo from '../../src/assets/images/umkclogo.png';\r\n\r\nconst pages = ['GTA Certification', 'Course Descriptions'];\r\nconst settings = ['Profile', 'Account', 'Dashboard', 'Logout'];\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst style = {\r\n  width: '100%',\r\n  maxWidth: 360,\r\n  bgcolor: 'background.paper',\r\n};\r\n\r\nconst Search = styled('div')(({ theme }) => ({\r\n  position: 'relative',\r\n  borderRadius: theme.shape.borderRadius,\r\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n  '&:hover': {\r\n    backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n  },\r\n  marginRight: theme.spacing(2),\r\n  marginLeft: 0,\r\n  width: '100%',\r\n  [theme.breakpoints.up('sm')]: {\r\n    marginLeft: theme.spacing(3),\r\n    width: 'auto',\r\n  },\r\n}));\r\n\r\nconst SearchIconWrapper = styled('div')(({ theme }) => ({\r\n  padding: theme.spacing(0, 2),\r\n  height: '100%',\r\n  position: 'absolute',\r\n  pointerEvents: 'none',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n}));\r\n\r\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n  color: 'inherit',\r\n  '& .MuiInputBase-input': {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '20ch',\r\n    },\r\n  },\r\n}));\r\n\r\nconst ExpandMore = styled((props) => {\r\n  const { expand, ...other } = props;\r\n  return <IconButton {...other} />;\r\n})(({ theme, expand }) => ({\r\n  transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\r\n  marginLeft: 'auto',\r\n  transition: theme.transitions.create('transform', {\r\n    duration: theme.transitions.duration.shortest,\r\n  }),\r\n}));\r\n\r\nfunction ResponsiveAppBar() {\r\n\r\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\r\n  const [anchorElUser, setAnchorElUser] = React.useState(null);\r\n\r\n  const handleOpenNavMenu = (event) => {\r\n    setAnchorElNav(event.currentTarget);\r\n  };\r\n  const handleOpenUserMenu = (event) => {\r\n    setAnchorElUser(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseNavMenu = () => {\r\n    setAnchorElNav(null);\r\n  };\r\n\r\n  const handleCloseUserMenu = () => {\r\n    setAnchorElUser(null);\r\n  };\r\n\r\n  const [expanded, setExpanded] = React.useState(false);\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ display: 'flex' }}>\r\n      <CssBaseline />\r\n      <AppBar position=\"fixed\" sx={{ zIndex: (theme) => theme.zIndex.drawer + 1 }} style={{ backgroundColor: '#005293', color: 'white' }}>\r\n        <Container maxWidth=\"xl\">\r\n          <Toolbar disableGutters>\r\n\r\n\r\n            <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\r\n              <IconButton\r\n                size=\"large\"\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleOpenNavMenu}\r\n                color=\"inherit\"\r\n\r\n              >\r\n                <MenuIcon />\r\n              </IconButton>\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorElNav}\r\n                anchorOrigin={{\r\n                  vertical: 'bottom',\r\n                  horizontal: 'left',\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'left',\r\n                }}\r\n                open={Boolean(anchorElNav)}\r\n                onClose={handleCloseNavMenu}\r\n                sx={{\r\n                  display: { xs: 'block', md: 'none' },\r\n                }}\r\n              >\r\n                {pages.map((page) => (\r\n                  <MenuItem key={page} onClick={handleCloseNavMenu}>\r\n                    <Typography textAlign=\"center\">{page}</Typography>\r\n                  </MenuItem>\r\n                ))}\r\n              </Menu>\r\n            </Box>\r\n            <Typography\r\n  variant=\"h6\"\r\n  noWrap\r\n  component=\"a\"\r\n  href=\"/\"\r\n  sx={{\r\n    mr: 2,\r\n    display: { xs: 'none', md: 'flex' },\r\n    fontFamily: 'monospace',\r\n    fontWeight: 700,\r\n    letterSpacing: '.3rem',\r\n    color: 'inherit',\r\n    backgroundColor: '#005293',\r\n    textDecoration: 'none',\r\n  }}\r\n>\r\n  <img\r\n    alt=\"UMKC\"\r\n    src={umkcLogo}\r\n    style={{\r\n      height: '100%',\r\n      maxHeight: '40px',\r\n    }}\r\n  />\r\n</Typography>\r\n\r\n            <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\r\n              {pages.map((page) => (\r\n                <Button\r\n                  key={page}\r\n                  onClick={handleCloseNavMenu}\r\n                  sx={{ my: 2, color: 'white', display: 'block' }}\r\n                >\r\n                  {page}\r\n                </Button>\r\n              ))}\r\n            </Box>\r\n\r\n            <Box sx={{ flexGrow: 0 }}>\r\n              <Button\r\n                //color='inherit'\r\n                style={{ backgroundColor: '#005293', color: 'white' }}\r\n                component={Link} to=\"/signin\"\r\n              >Log In\r\n              </Button>\r\n            </Box>\r\n          </Toolbar>\r\n        </Container>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        sx={{\r\n          width: drawerWidth,\r\n          flexShrink: 0,\r\n          [`& .MuiDrawer-paper`]: { width: drawerWidth, boxSizing: 'border-box' },\r\n        }}\r\n      >\r\n        <Toolbar />\r\n        <Box sx={{ overflow: 'auto' }}>\r\n          <List sx={style} component=\"nav\" aria-label=\"mailbox folders\">\r\n            <ListItem>\r\n              <Search>\r\n                <SearchIconWrapper>\r\n                  <SearchIcon />\r\n                </SearchIconWrapper>\r\n                <StyledInputBase\r\n                  placeholder=\"Search…\"\r\n                  inputProps={{ 'aria-label': 'search' }}\r\n                />\r\n              </Search>\r\n            </ListItem>\r\n            <Divider />\r\n            <ListItem button>\r\n              <ListItemText primary=\"Degree\" />\r\n            </ListItem>\r\n            <Divider />\r\n            <ListItem button>\r\n              <ListItemText primary=\"Graduating Semester\" />\r\n            </ListItem>\r\n            <Divider />\r\n            <ListItem button divider>\r\n              <ListItemText primary=\"Graduating Position\" />\r\n            </ListItem>\r\n            <ListItem button>\r\n              <ListItemText primary=\"Class\" />\r\n            </ListItem>\r\n            <Divider />\r\n            <ListItem button>\r\n              <ListItemText primary=\"GTA Certification\" />\r\n            </ListItem>\r\n            <Divider />\r\n          </List>\r\n        </Box>\r\n      </Drawer>\r\n      <Box component=\"main\" sx={{ flexGrow: 1, p: 3 }}>\r\n        <Toolbar />\r\n        <Card sx={{ maxWidth: 345 }}>\r\n          <CardHeader\r\n\r\n            title=\"CS 101 Grader\"\r\n          />\r\n          <CardActions disableSpacing>\r\n            <IconButton aria-label=\"add to favorites\">\r\n              <FavoriteIcon />\r\n            </IconButton>\r\n            <IconButton aria-label=\"share\">\r\n              <ShareIcon />\r\n            </IconButton>\r\n            <ExpandMore\r\n              expand={expanded}\r\n              onClick={handleExpandClick}\r\n              aria-expanded={expanded}\r\n              aria-label=\"show more\"\r\n            >\r\n              <ExpandMoreIcon />\r\n            </ExpandMore>\r\n          </CardActions>\r\n          <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n            <CardContent>\r\n              <Typography paragraph>\r\n                <ul>\r\n                  <li>Undergraduates: You may only apply to be a grader for a course you have taken at UMKC.</li>\r\n                  <li>Master’s Students: You may only apply to be a grader for undergraduate courses you took during your, previous, course of study. You may only apply to grade for graduate-level classes you have taken at UMKC (and received a satisfactory grade of an A,  A- or B+).</li>\r\n                  <li>PhD Students: You may be considered as a grader for any class, based on feedback from your advisor</li>\r\n                </ul>\r\n                <Button>Apply</Button>\r\n              </Typography>\r\n            </CardContent>\r\n          </Collapse>\r\n        </Card>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\nexport default ResponsiveAppBar;\r\n","C:\\Users\\Kaleb\\source\\repos\\Fighting-Mongooses\\src\\components\\userInfo.js",[],[],"C:\\Users\\Kaleb\\source\\repos\\Fighting-Mongooses\\src\\components\\adminHeader.js",["119"],[],{"ruleId":"120","severity":1,"message":"121","line":6,"column":8,"nodeType":"122","messageId":"123","endLine":6,"endColumn":24},{"ruleId":"120","severity":1,"message":"124","line":7,"column":8,"nodeType":"122","messageId":"123","endLine":7,"endColumn":16},{"ruleId":"120","severity":1,"message":"125","line":19,"column":22,"nodeType":"122","messageId":"123","endLine":19,"endColumn":25},{"ruleId":"120","severity":1,"message":"126","line":84,"column":10,"nodeType":"122","messageId":"123","endLine":84,"endColumn":15},{"ruleId":"120","severity":1,"message":"127","line":85,"column":10,"nodeType":"122","messageId":"123","endLine":85,"endColumn":18},{"ruleId":"120","severity":1,"message":"125","line":3,"column":39,"nodeType":"122","messageId":"123","endLine":3,"endColumn":42},{"ruleId":"128","severity":1,"message":"129","line":29,"column":6,"nodeType":"130","endLine":29,"endColumn":8,"suggestions":"131"},{"ruleId":"128","severity":1,"message":"132","line":40,"column":6,"nodeType":"130","endLine":40,"endColumn":8,"suggestions":"133"},{"ruleId":"120","severity":1,"message":"134","line":159,"column":9,"nodeType":"122","messageId":"123","endLine":159,"endColumn":18},{"ruleId":"135","severity":1,"message":"136","line":16,"column":9,"nodeType":"137","messageId":"138","endLine":16,"endColumn":17},{"ruleId":"120","severity":1,"message":"139","line":4,"column":10,"nodeType":"122","messageId":"123","endLine":4,"endColumn":20},{"ruleId":"120","severity":1,"message":"140","line":4,"column":22,"nodeType":"122","messageId":"123","endLine":4,"endColumn":29},{"ruleId":"120","severity":1,"message":"141","line":4,"column":31,"nodeType":"122","messageId":"123","endLine":4,"endColumn":37},{"ruleId":"120","severity":1,"message":"125","line":4,"column":39,"nodeType":"122","messageId":"123","endLine":4,"endColumn":42},{"ruleId":"120","severity":1,"message":"142","line":4,"column":44,"nodeType":"122","messageId":"123","endLine":4,"endColumn":53},{"ruleId":"120","severity":1,"message":"143","line":4,"column":55,"nodeType":"122","messageId":"123","endLine":4,"endColumn":64},{"ruleId":"120","severity":1,"message":"144","line":4,"column":66,"nodeType":"122","messageId":"123","endLine":4,"endColumn":71},{"ruleId":"120","severity":1,"message":"145","line":4,"column":73,"nodeType":"122","messageId":"123","endLine":4,"endColumn":78},{"ruleId":"120","severity":1,"message":"146","line":5,"column":39,"nodeType":"122","messageId":"123","endLine":5,"endColumn":43},{"ruleId":"120","severity":1,"message":"147","line":5,"column":45,"nodeType":"122","messageId":"123","endLine":5,"endColumn":56},{"ruleId":"120","severity":1,"message":"148","line":5,"column":58,"nodeType":"122","messageId":"123","endLine":5,"endColumn":69},{"ruleId":"120","severity":1,"message":"149","line":5,"column":71,"nodeType":"122","messageId":"123","endLine":5,"endColumn":80},{"ruleId":"120","severity":1,"message":"150","line":5,"column":121,"nodeType":"122","messageId":"123","endLine":5,"endColumn":131},{"ruleId":"151","severity":1,"message":"152","line":105,"column":1,"nodeType":"153","messageId":"154","endLine":105,"endColumn":21},{"ruleId":"151","severity":1,"message":"152","line":130,"column":1,"nodeType":"153","messageId":"154","endLine":130,"endColumn":16},{"ruleId":"151","severity":1,"message":"152","line":294,"column":1,"nodeType":"153","messageId":"154","endLine":294,"endColumn":17},{"ruleId":"151","severity":1,"message":"152","line":421,"column":2,"nodeType":"153","messageId":"154","endLine":421,"endColumn":9},{"ruleId":"120","severity":1,"message":"155","line":5,"column":8,"nodeType":"122","messageId":"123","endLine":5,"endColumn":11},{"ruleId":"120","severity":1,"message":"156","line":3,"column":8,"nodeType":"122","messageId":"123","endLine":3,"endColumn":17},{"ruleId":"120","severity":1,"message":"157","line":7,"column":10,"nodeType":"122","messageId":"123","endLine":7,"endColumn":13},{"ruleId":"120","severity":1,"message":"158","line":11,"column":8,"nodeType":"122","messageId":"123","endLine":11,"endColumn":20},{"ruleId":"120","severity":1,"message":"159","line":24,"column":8,"nodeType":"122","messageId":"123","endLine":24,"endColumn":14},{"ruleId":"120","severity":1,"message":"160","line":26,"column":8,"nodeType":"122","messageId":"123","endLine":26,"endColumn":15},{"ruleId":"120","severity":1,"message":"161","line":38,"column":7,"nodeType":"122","messageId":"123","endLine":38,"endColumn":15},{"ruleId":"120","severity":1,"message":"162","line":102,"column":10,"nodeType":"122","messageId":"123","endLine":102,"endColumn":22},{"ruleId":"120","severity":1,"message":"163","line":107,"column":9,"nodeType":"122","messageId":"123","endLine":107,"endColumn":27},{"ruleId":"120","severity":1,"message":"164","line":115,"column":9,"nodeType":"122","messageId":"123","endLine":115,"endColumn":28},{"ruleId":"120","severity":1,"message":"155","line":6,"column":8,"nodeType":"122","messageId":"123","endLine":6,"endColumn":11},"no-unused-vars","'FormControlLabel' is defined but never used.","Identifier","unusedVar","'Checkbox' is defined but never used.","'doc' is defined but never used.","'error' is assigned a value but never used.","'loggedIn' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUserData'. Either include it or remove the dependency array.","ArrayExpression",["165"],"React Hook useEffect has a missing dependency: 'getJobData'. Either include it or remove the dependency array.",["166"],"'checkUser' is assigned a value but never used.","no-dupe-keys","Duplicate key 'position'.","ObjectExpression","unexpected","'collection' is defined but never used.","'getDocs' is defined but never used.","'addDoc' is defined but never used.","'updateDoc' is defined but never used.","'deleteDoc' is defined but never used.","'query' is defined but never used.","'where' is defined but never used.","'Card' is defined but never used.","'CardActions' is defined but never used.","'CardContent' is defined but never used.","'TextField' is defined but never used.","'PaperProps' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'Box' is defined but never used.","'CardMedia' is defined but never used.","'red' is defined but never used.","'MoreVertIcon' is defined but never used.","'Avatar' is defined but never used.","'Tooltip' is defined but never used.","'settings' is assigned a value but never used.","'anchorElUser' is assigned a value but never used.","'handleOpenUserMenu' is assigned a value but never used.","'handleCloseUserMenu' is assigned a value but never used.",{"desc":"167","fix":"168"},{"desc":"169","fix":"170"},"Update the dependencies array to be: [getUserData]",{"range":"171","text":"172"},"Update the dependencies array to be: [getJobData]",{"range":"173","text":"174"},[1111,1113],"[getUserData]",[1489,1491],"[getJobData]"]