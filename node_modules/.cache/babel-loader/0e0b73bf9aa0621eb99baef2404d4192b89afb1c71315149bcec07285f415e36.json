{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kaleb\\\\source\\\\repos\\\\Fighting-Mongooses\\\\src\\\\components\\\\JobsSideTest.js\",\n  _s = $RefreshSig$();\nimport { React, useEffect, useState } from 'react';\nimport { db } from './firebase-config';\nimport { collection, getDocs, addDoc, doc, updateDoc, deleteDoc, query, where } from \"firebase/firestore\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Battery1Bar } from '@mui/icons-material';\nimport Popup from './popup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction JobsSide() {\n  _s();\n  // Define state variables to manage form input and job data\n  const [jobs, setJobs] = useState([]);\n  const [courseID, setCourseID] = useState(\"\");\n  const [term, setTerm] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [numPositions, setNumPosition] = useState(\"\");\n  const [state, setState] = useState(\"\");\n\n  //popup card \n  const [showPopup, setShowPopup] = useState(false);\n\n  // Define a reference to the \"backenddata\" collection in Firestore\n  const UsersCollectionRef = collection(db, \"backenddata\");\n\n  // Use the useEffect hook to fetch data from Firestore when the component mounts\n  useEffect(() => {\n    getUsersData();\n  }, []);\n\n  // Fetch data from Firestore and update the state variable \"jobs\"\n  const getUsersData = async () => {\n    const data = await getDocs(UsersCollectionRef);\n    setJobs(data.docs.map(elem => ({\n      ...elem.data(),\n      id: elem.id\n    })));\n  };\n  const getUserProfiles = async () => {\n    try {\n      const userProfilesCollectionRef = collection(db, 'profile');\n      const querySnapshot = await getDocs(userProfilesCollectionRef);\n      const userProfiles = [];\n      querySnapshot.forEach(doc => {\n        userProfiles.push({\n          id: doc.id,\n          ...doc.data()\n        });\n      });\n      return userProfiles;\n    } catch (error) {\n      console.error('Error retrieving user profiles: ', error);\n      return null;\n    }\n  };\n\n  // Add a new job to Firestore\n  const createJob = async () => {\n    await addDoc(UsersCollectionRef, {\n      Courseid: courseID,\n      Term: term,\n      Type: type,\n      NumPositions: numPositions,\n      State: state\n    });\n    window.location.reload();\n  };\n  const handleUpdate = async () => {\n    // Create an object with the updated data for the document\n    const updatedData = {\n      Courseid: courseID,\n      Term: term,\n      Type: type,\n      NumPositions: numPositions,\n      State: state\n    };\n    // Call the updateJob function with the courseID and updated data\n    await updateJob(courseID, updatedData);\n  };\n\n  // Define a function that updates a document in Firebase with the specified ID\n  const updateJob = async (id, updatedData) => {\n    try {\n      // Query Firebase for documents that match the specified courseID\n      const jobQuerySnapshot = await getDocs(query(UsersCollectionRef, where(\"Courseid\", \"==\", id)));\n      // If there is at least one document that matches the query\n      if (jobQuerySnapshot.docs.length > 0) {\n        // Get the reference to the first document that matches the query\n        const jobRef = jobQuerySnapshot.docs[0].ref;\n        // Update the document with the updated data\n        await updateDoc(jobRef, updatedData);\n        console.log(\"Document successfully updated!\");\n      } else {\n        console.log(`No job found with id ${id}`);\n      }\n      // Reload the page to show the updated data\n      window.location.reload();\n    } catch (error) {\n      console.error(\"Error updating document: \", error);\n    }\n  };\n  const handleDelete = async () => {\n    await deleteJob(courseID);\n  };\n  const deleteJob = async id => {\n    //delete a job with the selected courseid\n    try {\n      const jobQuerySnapshot = await getDocs(\n      // Query Firebase for documents that match the specified courseID\n      query(UsersCollectionRef, where(\"Courseid\", \"==\", id)));\n      if (jobQuerySnapshot.docs.length > 0) {\n        // If there is at least one document that matches the query\n        await deleteDoc(jobQuerySnapshot.docs[0].ref);\n        // delete the document\n        console.log(\"Document successfully deleted!\");\n      } else {\n        console.log(`No job found with id ${id}`);\n      }\n      window.location.reload();\n    } catch (error) {\n      console.error(\"Error deleting document: \", error);\n    }\n  };\n\n  // Check user\n  // Define an asynchronous function called \"checkUser\"\n  const checkUser = async () => {\n    // Use the \"addDoc\" function to add a new document to the \"UsersCollectionRef\" collection in Firestore\n    // The new document will contain the values of the \"courseID\", \"term\", \"type\", \"numPositions\", and \"state\" variables\n    await addDoc(UsersCollectionRef, {\n      Courseid: courseID,\n      Term: term,\n      Type: type,\n      NumPositions: numPositions,\n      State: state\n    });\n\n    // Reload the page after the new document has been added\n    window.location.reload();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"split-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"split-screen-left\",\n      children: /*#__PURE__*/_jsxDEV(\"container\", {\n        fullWidth: true,\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              style: {\n                textAlign: 'center'\n              },\n              children: \"Manage Jobs\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              justify: \"center\",\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 10,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  variant: \"outlined\",\n                  size: \"medium\",\n                  fullWidth: true,\n                  name: \"courseID\",\n                  placeholder: \"*CourseID\",\n                  onChange: event => {\n                    setCourseID(event.target.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              justify: \"center\",\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 10,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  variant: \"outlined\",\n                  size: \"medium\",\n                  fullWidth: true,\n                  name: \"term\",\n                  placeholder: \"Term\",\n                  onChange: event => {\n                    setTerm(event.target.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              justify: \"center\",\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 10,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  variant: \"outlined\",\n                  size: \"medium\",\n                  fullWidth: true,\n                  name: \"type\",\n                  placeholder: \"Type\",\n                  onChange: event => {\n                    setType(event.target.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              justify: \"center\",\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 10,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  variant: \"outlined\",\n                  size: \"medium\",\n                  fullWidth: true,\n                  name: \"numPositions\",\n                  placeholder: \"NumPositions\",\n                  onChange: event => {\n                    setNumPosition(event.target.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 3,\n              justify: \"center\",\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 10,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  variant: \"outlined\",\n                  size: \"medium\",\n                  fullWidth: true,\n                  name: \"state\",\n                  placeholder: \"State\",\n                  onChange: event => {\n                    setState(event.target.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: createJob,\n            className: \"button\",\n            children: \"Create Job\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleUpdate,\n            className: \"button\",\n            children: \"Update Job\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleDelete,\n            className: \"button\",\n            children: \"Delete Job\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"split-screen-right\",\n      children: [/*#__PURE__*/_jsxDEV(Container, {\n        fullWidth: true,\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            textAlign: 'center',\n            marginRight: '175px'\n          },\n          children: \"Current Jobs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), jobs.map(user => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hover:animate-pulse m-4 bg-gray-600 w-1/4 rounded-md p-2\",\n          children: [/*#__PURE__*/_jsxDEV(Container, {\n            component: \"main\",\n            maxWidth: \"xs\",\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 15,\n                children: /*#__PURE__*/_jsxDEV(\"table\", {\n                  className: \"jobTable\",\n                  children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Course ID\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 243,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Term\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 244,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Type\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 245,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Num Positions\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 246,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"State\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 247,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 242,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 241,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        children: user.Courseid\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 252,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: user.Term\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 253,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: user.Type\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 254,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: user.NumPositions\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 255,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: user.State\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 256,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                          onClick: () => setShowPopup(true),\n                          children: \"Applicants\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 259,\n                          columnNumber: 29\n                        }, this), showPopup && /*#__PURE__*/_jsxDEV(Popup, {\n                          title: \"Job Details\",\n                          onClose: () => setShowPopup(false),\n                          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                              children: \"Course ID:\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 262,\n                              columnNumber: 36\n                            }, this), \" \", user.Courseid]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 262,\n                            columnNumber: 33\n                          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                              children: \"Term:\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 263,\n                              columnNumber: 36\n                            }, this), \" \", user.Term]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 263,\n                            columnNumber: 33\n                          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                              children: \"Type:\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 264,\n                              columnNumber: 40\n                            }, this), \" \", user.Type]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 264,\n                            columnNumber: 37\n                          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                              children: \"Number of Positions:\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 265,\n                              columnNumber: 36\n                            }, this), \" \", user.NumPositions]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 265,\n                            columnNumber: 33\n                          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                              children: \"State:\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 266,\n                              columnNumber: 36\n                            }, this), \" \", user.State]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 266,\n                            columnNumber: 33\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 261,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 257,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 251,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 250,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n}\n_s(JobsSide, \"E0d+gwtfvb+L0h/jlfTZphzJXIM=\");\n_c = JobsSide;\nexport default JobsSide;\nvar _c;\n$RefreshReg$(_c, \"JobsSide\");","map":{"version":3,"names":["React","useEffect","useState","db","collection","getDocs","addDoc","doc","updateDoc","deleteDoc","query","where","Typography","TextField","Container","Grid","Battery1Bar","Popup","jsxDEV","_jsxDEV","Fragment","_Fragment","JobsSide","_s","jobs","setJobs","courseID","setCourseID","term","setTerm","type","setType","numPositions","setNumPosition","state","setState","showPopup","setShowPopup","UsersCollectionRef","getUsersData","data","docs","map","elem","id","getUserProfiles","userProfilesCollectionRef","querySnapshot","userProfiles","forEach","push","error","console","createJob","Courseid","Term","Type","NumPositions","State","window","location","reload","handleUpdate","updatedData","updateJob","jobQuerySnapshot","length","jobRef","ref","log","handleDelete","deleteJob","checkUser","className","children","fullWidth","style","display","flexDirection","alignItems","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","justify","item","xs","sm","variant","size","name","placeholder","onChange","event","target","value","onClick","marginRight","user","component","maxWidth","title","onClose","_c","$RefreshReg$"],"sources":["C:/Users/Kaleb/source/repos/Fighting-Mongooses/src/components/JobsSideTest.js"],"sourcesContent":["import { React, useEffect, useState } from 'react';\r\nimport { db } from './firebase-config';\r\nimport { collection, getDocs, addDoc, doc, updateDoc, deleteDoc, query, where } from \"firebase/firestore\"\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Battery1Bar } from '@mui/icons-material';\r\nimport Popup from './popup';\r\n\r\nfunction JobsSide() {\r\n  // Define state variables to manage form input and job data\r\n  const [jobs, setJobs] = useState([]);\r\n  const [courseID, setCourseID] = useState(\"\");\r\n  const [term, setTerm] = useState(\"\");\r\n  const [type, setType] = useState(\"\");\r\n  const [numPositions, setNumPosition] = useState(\"\");\r\n  const [state, setState] = useState(\"\");\r\n\r\n  //popup card \r\n  const [showPopup, setShowPopup] = useState(false);\r\n\r\n\r\n  // Define a reference to the \"backenddata\" collection in Firestore\r\n  const UsersCollectionRef = collection(db, \"backenddata\");\r\n\r\n  // Use the useEffect hook to fetch data from Firestore when the component mounts\r\n  useEffect(() => {\r\n    getUsersData();\r\n  }, []);\r\n\r\n  // Fetch data from Firestore and update the state variable \"jobs\"\r\n  const getUsersData = async () => {\r\n    const data = await getDocs(UsersCollectionRef);\r\n    setJobs(data.docs.map((elem) => ({ ...elem.data(), id: elem.id })));\r\n  };\r\n\r\n  const getUserProfiles = async () => {\r\n    try {\r\n      const userProfilesCollectionRef = collection(db, 'profile');\r\n      const querySnapshot = await getDocs(userProfilesCollectionRef);\r\n      const userProfiles = [];\r\n      querySnapshot.forEach((doc) => {\r\n        userProfiles.push({ id: doc.id, ...doc.data() });\r\n      });\r\n      return userProfiles;\r\n    } catch (error) {\r\n      console.error('Error retrieving user profiles: ', error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  // Add a new job to Firestore\r\n  const createJob = async () => {\r\n    await addDoc(UsersCollectionRef, {\r\n      Courseid: courseID,\r\n      Term: term,\r\n      Type: type,\r\n      NumPositions: numPositions,\r\n      State: state,\r\n    });\r\n    window.location.reload();\r\n  };\r\n\r\n  const handleUpdate = async () => {\r\n    // Create an object with the updated data for the document\r\n    const updatedData = {\r\n      Courseid: courseID,\r\n      Term: term,\r\n      Type: type,\r\n      NumPositions: numPositions,\r\n      State: state,\r\n    };\r\n    // Call the updateJob function with the courseID and updated data\r\n    await updateJob(courseID, updatedData);\r\n  };\r\n\r\n  // Define a function that updates a document in Firebase with the specified ID\r\n  const updateJob = async (id, updatedData) => {\r\n    try {\r\n      // Query Firebase for documents that match the specified courseID\r\n      const jobQuerySnapshot = await getDocs(\r\n        query(UsersCollectionRef, where(\"Courseid\", \"==\", id))\r\n      );\r\n      // If there is at least one document that matches the query\r\n      if (jobQuerySnapshot.docs.length > 0) {\r\n        // Get the reference to the first document that matches the query\r\n        const jobRef = jobQuerySnapshot.docs[0].ref;\r\n        // Update the document with the updated data\r\n        await updateDoc(jobRef, updatedData);\r\n        console.log(\"Document successfully updated!\");\r\n      } else {\r\n        console.log(`No job found with id ${id}`);\r\n      }\r\n      // Reload the page to show the updated data\r\n      window.location.reload();\r\n    } catch (error) {\r\n      console.error(\"Error updating document: \", error);\r\n    }\r\n  };\r\n  const handleDelete = async () => {\r\n    await deleteJob(courseID);\r\n  };\r\n\r\n  const deleteJob = async (id) => {//delete a job with the selected courseid\r\n    try {\r\n      const jobQuerySnapshot = await getDocs(\r\n        // Query Firebase for documents that match the specified courseID\r\n        query(UsersCollectionRef, where(\"Courseid\", \"==\", id))\r\n      );\r\n      if (jobQuerySnapshot.docs.length > 0) {\r\n        // If there is at least one document that matches the query\r\n        await deleteDoc(jobQuerySnapshot.docs[0].ref);\r\n        // delete the document\r\n        console.log(\"Document successfully deleted!\");\r\n      } else {\r\n        console.log(`No job found with id ${id}`);\r\n      }\r\n      window.location.reload();\r\n    } catch (error) {\r\n      console.error(\"Error deleting document: \", error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n  // Check user\r\n  // Define an asynchronous function called \"checkUser\"\r\n  const checkUser = async () => {\r\n    // Use the \"addDoc\" function to add a new document to the \"UsersCollectionRef\" collection in Firestore\r\n    // The new document will contain the values of the \"courseID\", \"term\", \"type\", \"numPositions\", and \"state\" variables\r\n    await addDoc(UsersCollectionRef, {\r\n      Courseid: courseID,\r\n      Term: term,\r\n      Type: type,\r\n      NumPositions: numPositions,\r\n      State: state,\r\n    });\r\n\r\n    // Reload the page after the new document has been added\r\n    window.location.reload();\r\n  };\r\n  return (\r\n    <div className='split-screen'>\r\n      <div className='split-screen-left' >\r\n        <container fullWidth>\r\n          <>\r\n            <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n              <h2 style={{ textAlign: 'center' }}>Manage Jobs</h2>\r\n              <Grid container spacing={2} justify=\"center\">\r\n                <Grid item xs={12} sm={10}>\r\n                  <TextField\r\n                    variant='outlined'\r\n                    size='medium'\r\n                    fullWidth\r\n                    name='courseID'\r\n                    placeholder='*CourseID'\r\n                    onChange={(event) => { setCourseID(event.target.value) }}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container spacing={2} justify=\"center\">\r\n                <Grid item xs={12} sm={10}>\r\n                  <TextField\r\n                    variant='outlined'\r\n                    size='medium'\r\n                    fullWidth\r\n                    name='term'\r\n                    placeholder='Term'\r\n                    onChange={(event) => { setTerm(event.target.value) }}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid container spacing={2} justify=\"center\">\r\n                <Grid item xs={12} sm={10}>\r\n                  <TextField\r\n                    variant='outlined'\r\n                    size='medium'\r\n                    fullWidth\r\n                    name='type'\r\n                    placeholder='Type'\r\n                    onChange={(event) => { setType(event.target.value) }}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid container spacing={2} justify=\"center\">\r\n                <Grid item xs={12} sm={10}>\r\n                  <TextField\r\n                    variant='outlined'\r\n                    size='medium'\r\n                    fullWidth\r\n                    name='numPositions'\r\n                    placeholder='NumPositions'\r\n                    onChange={(event) => { setNumPosition(event.target.value) }}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid container spacing={3} justify=\"center\">\r\n                <Grid item xs={12} sm={10}>\r\n                  <TextField\r\n                    variant='outlined'\r\n                    size='medium'\r\n                    fullWidth\r\n                    name='state'\r\n                    placeholder='State'\r\n                    onChange={(event) => { setState(event.target.value) }}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n            <br></br>\r\n            <button onClick={createJob} className=\"button\">\r\n              Create Job\r\n            </button>\r\n            <button onClick={handleUpdate} className=\"button\">\r\n              Update Job\r\n            </button>\r\n            <button onClick={handleDelete} className=\"button\">\r\n              Delete Job\r\n            </button>\r\n            <br /><br />\r\n          </>\r\n        </container>\r\n      </div>\r\n      <div className='split-screen-right'>\r\n        <Container fullWidth>\r\n          <h2 style={{ textAlign: 'center', marginRight: '175px' }}>Current Jobs</h2>\r\n        </Container>\r\n\r\n        {jobs.map(user => {\r\n          return (\r\n            <div className='hover:animate-pulse m-4 bg-gray-600 w-1/4 rounded-md p-2'>\r\n              <Container component=\"main\" maxWidth=\"xs\">\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12} sm={15}>\r\n                    <table className='jobTable'>\r\n                      <thead>\r\n                        <tr>\r\n                          <th>Course ID</th>\r\n                          <th>Term</th>\r\n                          <th>Type</th>\r\n                          <th>Num Positions</th>\r\n                          <th>State</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        <tr>\r\n                          <td>{user.Courseid}</td>\r\n                          <td>{user.Term}</td>\r\n                          <td>{user.Type}</td>\r\n                          <td>{user.NumPositions}</td>\r\n                          <td>{user.State}</td>\r\n                          <td>\r\n                            {/* Change the popup to show applicants */}\r\n                            <button onClick={() => setShowPopup(true)}>Applicants</button>\r\n                            {showPopup && (\r\n                              <Popup title=\"Job Details\" onClose={() => setShowPopup(false)}> \r\n                                <p><strong>Course ID:</strong> {user.Courseid}</p>\r\n                                <p><strong>Term:</strong> {user.Term}</p>\r\n                                    <p><strong>Type:</strong> {user.Type}</p>\r\n                                <p><strong>Number of Positions:</strong> {user.NumPositions}</p>\r\n                                <p><strong>State:</strong> {user.State}</p>\r\n                              </Popup>\r\n                            )}\r\n                          </td>\r\n                        </tr>\r\n                      </tbody>\r\n                    </table>\r\n                  </Grid>\r\n                </Grid>\r\n              </Container>\r\n              <br></br>\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default JobsSide;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}