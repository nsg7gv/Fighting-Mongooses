{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kaleb\\\\source\\\\repos\\\\Fighting-Mongooses\\\\src\\\\components\\\\jobList.js\";\nimport React from 'react';\nimport { Container, Grid, Typography, Card, CardContent, Table, TableHead, TableBody, TableRow, TableCell, Button } from '@material-ui/core';\nimport Popup from './popup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst JobList = _ref => {\n  let {\n    jobs,\n    users,\n    showPopup,\n    setShowPopup\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        align: \"center\",\n        style: {\n          marginBottom: '2rem'\n        },\n        children: \"Current Jobs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }, this), jobs.map(job => /*#__PURE__*/_jsxDEV(Card, {\n        className: \"hover:animate-pulse m-4 w-1/4 rounded-md\",\n        style: {\n          backgroundColor: '#424242'\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: /*#__PURE__*/_jsxDEV(Container, {\n            component: \"main\",\n            maxWidth: \"xs\",\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 12,\n                children: /*#__PURE__*/_jsxDEV(Table, {\n                  className: \"jobTable\",\n                  children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                    children: /*#__PURE__*/_jsxDEV(TableRow, {\n                      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                        children: \"Course ID\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 35,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: \"Term\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 36,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: \"Type\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 37,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: \"Num Positions\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 38,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: \"State\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 39,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 34,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 33,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                    children: /*#__PURE__*/_jsxDEV(TableRow, {\n                      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                        children: job.Courseid\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 44,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: job.Term\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 45,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: job.Type\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 46,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: job.NumPositions\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 47,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: job.State\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 48,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: [/*#__PURE__*/_jsxDEV(Button, {\n                          variant: \"contained\",\n                          color: \"primary\",\n                          onClick: () => setShowPopup(true),\n                          children: \"Applicants\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 50,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: users.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n                            children: showPopup && /*#__PURE__*/_jsxDEV(Popup, {\n                              title: \"Applicants\",\n                              onClose: () => setShowPopup(false),\n                              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                                  children: \"Email:\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 66,\n                                  columnNumber: 39\n                                }, this), \" \", user.Email]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 65,\n                                columnNumber: 37\n                              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                                  children: \"Name:\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 69,\n                                  columnNumber: 39\n                                }, this), \" \", user.LName, \",\", ' ', user.FName]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 68,\n                                columnNumber: 37\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 61,\n                              columnNumber: 35\n                            }, this)\n                          }, user.id, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 59,\n                            columnNumber: 31\n                          }, this))\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 57,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 49,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 43,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 42,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 32,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_c = JobList;\nexport default JobList;\nvar _c;\n$RefreshReg$(_c, \"JobList\");","map":{"version":3,"names":["React","Container","Grid","Typography","Card","CardContent","Table","TableHead","TableBody","TableRow","TableCell","Button","Popup","jsxDEV","_jsxDEV","Fragment","_Fragment","JobList","_ref","jobs","users","showPopup","setShowPopup","children","maxWidth","variant","align","style","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","map","job","className","backgroundColor","component","container","spacing","item","xs","sm","Courseid","Term","Type","NumPositions","State","color","onClick","user","title","onClose","Email","LName","FName","id","_c","$RefreshReg$"],"sources":["C:/Users/Kaleb/source/repos/Fighting-Mongooses/src/components/jobList.js"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  Container,\r\n  Grid,\r\n  Typography,\r\n  Card,\r\n  CardContent,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Button,\r\n} from '@material-ui/core';\r\nimport Popup from './popup';\r\n\r\nconst JobList = ({ jobs, users, showPopup, setShowPopup }) => (\r\n  <>\r\n    <Container maxWidth=\"lg\">\r\n      <Typography variant=\"h4\" align=\"center\" style={{ marginBottom: '2rem' }}>\r\n        Current Jobs\r\n      </Typography>\r\n      {jobs.map((job) => (\r\n        <Card\r\n          className=\"hover:animate-pulse m-4 w-1/4 rounded-md\"\r\n          style={{ backgroundColor: '#424242' }}\r\n        >\r\n          <CardContent>\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={12}>\r\n                  <Table className=\"jobTable\">\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>Course ID</TableCell>\r\n                        <TableCell>Term</TableCell>\r\n                        <TableCell>Type</TableCell>\r\n                        <TableCell>Num Positions</TableCell>\r\n                        <TableCell>State</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      <TableRow>\r\n                        <TableCell>{job.Courseid}</TableCell>\r\n                        <TableCell>{job.Term}</TableCell>\r\n                        <TableCell>{job.Type}</TableCell>\r\n                        <TableCell>{job.NumPositions}</TableCell>\r\n                        <TableCell>{job.State}</TableCell>\r\n                        <TableCell>\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={() => setShowPopup(true)}\r\n                          >\r\n                            Applicants\r\n                          </Button>\r\n                          <div>\r\n                            {users.map((user) => (\r\n                              <div key={user.id}>\r\n                                {showPopup && (\r\n                                  <Popup\r\n                                    title=\"Applicants\"\r\n                                    onClose={() => setShowPopup(false)}\r\n                                  >\r\n                                    <p>\r\n                                      <strong>Email:</strong> {user.Email}\r\n                                    </p>\r\n                                    <p>\r\n                                      <strong>Name:</strong> {user.LName},{' '}\r\n                                      {user.FName}\r\n                                    </p>\r\n                                  </Popup>\r\n                                )}\r\n                              </div>\r\n                            ))}\r\n                          </div>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    </TableBody>\r\n                  </Table>\r\n                </Grid>\r\n              </Grid>\r\n            </Container>\r\n          </CardContent>\r\n        </Card>\r\n      ))}\r\n    </Container>\r\n  </>\r\n);\r\n\r\nexport default JobList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}