{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kaleb\\\\source\\\\repos\\\\Fighting-Mongooses\\\\src\\\\components\\\\userInfo.js\",\n  _s = $RefreshSig$();\n// src/AuthContext.js\nimport React, { createContext, useState, useEffect } from 'react';\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\nimport { collection, doc, getDoc } from \"firebase/firestore\";\nimport { db } from \"./firebase-config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nconst AuthProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    const auth = getAuth();\n\n    // Listen for authentication state changes\n    const unsubscribe = onAuthStateChanged(auth, async firebaseUser => {\n      if (firebaseUser) {\n        // If the user is logged in, fetch their data from Firestore\n        const userDocRef = doc(collection(db, \"profile\"), firebaseUser.uid);\n        const userDoc = await getDoc(userDocRef);\n        if (userDoc.exists()) {\n          setUser(userDoc.data());\n        } else {\n          console.error(\"User document not found\");\n        }\n      } else {\n        // If the user is logged out, set the user state to null\n        setUser(null);\n      }\n    });\n\n    // Clean up the listener when the component is unmounted\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      setUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 7\n  }, this);\n};\n_s(AuthProvider, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n_c = AuthProvider;\nexport { AuthContext, AuthProvider };\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","getAuth","onAuthStateChanged","collection","doc","getDoc","db","jsxDEV","_jsxDEV","AuthContext","AuthProvider","_ref","_s","children","user","setUser","auth","unsubscribe","firebaseUser","userDocRef","uid","userDoc","exists","data","console","error","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Kaleb/source/repos/Fighting-Mongooses/src/components/userInfo.js"],"sourcesContent":["// src/AuthContext.js\r\nimport React, { createContext, useState, useEffect } from 'react';\r\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\r\nimport { collection, doc, getDoc } from \"firebase/firestore\";\r\nimport { db } from \"./firebase-config\";\r\n\r\n\r\nconst AuthContext = createContext();\r\n\r\nconst AuthProvider = ({ children }) => {\r\n    const [user, setUser] = useState(null);\r\n  \r\n    useEffect(() => {\r\n      const auth = getAuth();\r\n  \r\n      // Listen for authentication state changes\r\n      const unsubscribe = onAuthStateChanged(auth, async (firebaseUser) => {\r\n        if (firebaseUser) {\r\n          // If the user is logged in, fetch their data from Firestore\r\n          const userDocRef = doc(collection(db, \"profile\"), firebaseUser.uid);\r\n          const userDoc = await getDoc(userDocRef);\r\n          if (userDoc.exists()) {\r\n            setUser(userDoc.data());\r\n          } else {\r\n            console.error(\"User document not found\");\r\n          }\r\n        } else {\r\n          // If the user is logged out, set the user state to null\r\n          setUser(null);\r\n        }\r\n      });\r\n  \r\n      // Clean up the listener when the component is unmounted\r\n      return () => {\r\n        unsubscribe();\r\n      };\r\n    }, []);\r\n  \r\n    return (\r\n      <AuthContext.Provider value={{ user, setUser }}>\r\n        {children}\r\n      </AuthContext.Provider>\r\n    );\r\n  };\r\n  \r\n\r\nexport { AuthContext, AuthProvider };\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,SAASC,OAAO,EAAEC,kBAAkB,QAAQ,eAAe;AAC3D,SAASC,UAAU,EAAEC,GAAG,EAAEC,MAAM,QAAQ,oBAAoB;AAC5D,SAASC,EAAE,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGvC,MAAMC,WAAW,gBAAGX,aAAa,EAAE;AAEnC,MAAMY,YAAY,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EAC9B,MAAM,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,MAAMgB,IAAI,GAAGf,OAAO,EAAE;;IAEtB;IACA,MAAMgB,WAAW,GAAGf,kBAAkB,CAACc,IAAI,EAAE,MAAOE,YAAY,IAAK;MACnE,IAAIA,YAAY,EAAE;QAChB;QACA,MAAMC,UAAU,GAAGf,GAAG,CAACD,UAAU,CAACG,EAAE,EAAE,SAAS,CAAC,EAAEY,YAAY,CAACE,GAAG,CAAC;QACnE,MAAMC,OAAO,GAAG,MAAMhB,MAAM,CAACc,UAAU,CAAC;QACxC,IAAIE,OAAO,CAACC,MAAM,EAAE,EAAE;UACpBP,OAAO,CAACM,OAAO,CAACE,IAAI,EAAE,CAAC;QACzB,CAAC,MAAM;UACLC,OAAO,CAACC,KAAK,CAAC,yBAAyB,CAAC;QAC1C;MACF,CAAC,MAAM;QACL;QACAV,OAAO,CAAC,IAAI,CAAC;MACf;IACF,CAAC,CAAC;;IAEF;IACA,OAAO,MAAM;MACXE,WAAW,EAAE;IACf,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACET,OAAA,CAACC,WAAW,CAACiB,QAAQ;IAACC,KAAK,EAAE;MAAEb,IAAI;MAAEC;IAAQ,CAAE;IAAAF,QAAA,EAC5CA;EAAQ;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACY;AAE3B,CAAC;AAACnB,EAAA,CAlCEF,YAAY;AAAAsB,EAAA,GAAZtB,YAAY;AAqClB,SAASD,WAAW,EAAEC,YAAY;AAAG,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}