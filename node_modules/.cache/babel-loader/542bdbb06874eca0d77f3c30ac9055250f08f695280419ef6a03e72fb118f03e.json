{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kaleb\\\\source\\\\repos\\\\Fighting-Mongooses\\\\src\\\\components\\\\JobsSideTest.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { db } from './firebase-config';\nimport { collection, getDocs, addDoc, doc, updateDoc, deleteDoc, query, where } from \"firebase/firestore\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Battery1Bar } from '@mui/icons-material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction JobsSide() {\n  _s();\n  // Define state variables to manage form input and job data\n  const [jobs, setJobs] = useState([]);\n  const [courseID, setCourseID] = useState(\"\");\n  const [term, setTerm] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [numPositions, setNumPosition] = useState(\"\");\n  const [state, setState] = useState(\"\");\n\n  //popup card \n  const [showPopup, setShowPopup] = useState(false);\n  {\n    showPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This is the popup content.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowPopup(false),\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }, this);\n  }\n\n  // Define a reference to the \"backenddata\" collection in Firestore\n  const UsersCollectionRef = collection(db, \"backenddata\");\n\n  // Use the useEffect hook to fetch data from Firestore when the component mounts\n  useEffect(() => {\n    getUsersData();\n  }, []);\n\n  // Fetch data from Firestore and update the state variable \"jobs\"\n  const getUsersData = async () => {\n    const data = await getDocs(UsersCollectionRef);\n    setJobs(data.docs.map(elem => ({\n      ...elem.data(),\n      id: elem.id\n    })));\n  };\n\n  // Add a new job to Firestore\n  const createJob = async () => {\n    await addDoc(UsersCollectionRef, {\n      Courseid: courseID,\n      Term: term,\n      Type: type,\n      NumPositions: numPositions,\n      State: state\n    });\n    window.location.reload();\n  };\n  const handleUpdate = async () => {\n    // Create an object with the updated data for the document\n    const updatedData = {\n      Courseid: courseID,\n      Term: term,\n      Type: type,\n      NumPositions: numPositions,\n      State: state\n    };\n    // Call the updateJob function with the courseID and updated data\n    await updateJob(courseID, updatedData);\n  };\n\n  // Define a function that updates a document in Firebase with the specified ID\n  const updateJob = async (id, updatedData) => {\n    try {\n      // Query Firebase for documents that match the specified courseID\n      const jobQuerySnapshot = await getDocs(query(UsersCollectionRef, where(\"Courseid\", \"==\", id)));\n      // If there is at least one document that matches the query\n      if (jobQuerySnapshot.docs.length > 0) {\n        // Get the reference to the first document that matches the query\n        const jobRef = jobQuerySnapshot.docs[0].ref;\n        // Update the document with the updated data\n        await updateDoc(jobRef, updatedData);\n        console.log(\"Document successfully updated!\");\n      } else {\n        console.log(`No job found with id ${id}`);\n      }\n      // Reload the page to show the updated data\n      window.location.reload();\n    } catch (error) {\n      console.error(\"Error updating document: \", error);\n    }\n  };\n  const handleDelete = async () => {\n    await deleteJob(courseID);\n  };\n  const deleteJob = async id => {\n    //delete a job with the selected courseid\n    try {\n      const jobQuerySnapshot = await getDocs(\n      // Query Firebase for documents that match the specified courseID\n      query(UsersCollectionRef, where(\"Courseid\", \"==\", id)));\n      if (jobQuerySnapshot.docs.length > 0) {\n        // If there is at least one document that matches the query\n        await deleteDoc(jobQuerySnapshot.docs[0].ref);\n        // delete the document\n        console.log(\"Document successfully deleted!\");\n      } else {\n        console.log(`No job found with id ${id}`);\n      }\n      window.location.reload();\n    } catch (error) {\n      console.error(\"Error deleting document: \", error);\n    }\n  };\n\n  // Check user\n  // Define an asynchronous function called \"checkUser\"\n  const checkUser = async () => {\n    // Use the \"addDoc\" function to add a new document to the \"UsersCollectionRef\" collection in Firestore\n    // The new document will contain the values of the \"courseID\", \"term\", \"type\", \"numPositions\", and \"state\" variables\n    await addDoc(UsersCollectionRef, {\n      Courseid: courseID,\n      Term: term,\n      Type: type,\n      NumPositions: numPositions,\n      State: state\n    });\n\n    // Reload the page after the new document has been added\n    window.location.reload();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"split-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"split-screen-left\",\n      children: /*#__PURE__*/_jsxDEV(\"container\", {\n        fullWidth: true,\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              style: {\n                textAlign: 'center'\n              },\n              children: \"Manage Jobs\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              justify: \"center\",\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 10,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  variant: \"outlined\",\n                  size: \"medium\",\n                  fullWidth: true,\n                  name: \"courseID\",\n                  placeholder: \"*CourseID\",\n                  onChange: event => {\n                    setCourseID(event.target.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              justify: \"center\",\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 10,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  variant: \"outlined\",\n                  size: \"medium\",\n                  fullWidth: true,\n                  name: \"term\",\n                  placeholder: \"Term\",\n                  onChange: event => {\n                    setTerm(event.target.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              justify: \"center\",\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 10,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  variant: \"outlined\",\n                  size: \"medium\",\n                  fullWidth: true,\n                  name: \"type\",\n                  placeholder: \"Type\",\n                  onChange: event => {\n                    setType(event.target.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              justify: \"center\",\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 10,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  variant: \"outlined\",\n                  size: \"medium\",\n                  fullWidth: true,\n                  name: \"numPositions\",\n                  placeholder: \"NumPositions\",\n                  onChange: event => {\n                    setNumPosition(event.target.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 3,\n              justify: \"center\",\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 10,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  variant: \"outlined\",\n                  size: \"medium\",\n                  fullWidth: true,\n                  name: \"state\",\n                  placeholder: \"State\",\n                  onChange: event => {\n                    setState(event.target.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: createJob,\n            className: \"button\",\n            children: \"Create Job\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleUpdate,\n            className: \"button\",\n            children: \"Update Job\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleDelete,\n            className: \"button\",\n            children: \"Delete Job\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"split-screen-right\",\n      children: [/*#__PURE__*/_jsxDEV(Container, {\n        fullWidth: true,\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            textAlign: 'center',\n            marginRight: '175px'\n          },\n          children: \"Current Jobs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), jobs.map(user => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hover:animate-pulse m-4 bg-gray-600 w-1/4 rounded-md p-2\",\n          children: [/*#__PURE__*/_jsxDEV(Container, {\n            component: \"main\",\n            maxWidth: \"xs\",\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 15,\n                children: /*#__PURE__*/_jsxDEV(\"table\", {\n                  className: \"jobTable\",\n                  children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Course ID\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 233,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Term\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 234,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Type\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 235,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Num Positions\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 236,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"State\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 237,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 232,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 231,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        children: user.Courseid\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 242,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: user.Term\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 243,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: user.Type\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 244,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: user.NumPositions\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 245,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: user.State\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 246,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: /*#__PURE__*/_jsxDEV(\"button\", {\n                          onClick: () => setShowPopup(true),\n                          children: \"View\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 248,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 247,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 241,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n}\n_s(JobsSide, \"E0d+gwtfvb+L0h/jlfTZphzJXIM=\");\n_c = JobsSide;\nexport default JobsSide;\nvar _c;\n$RefreshReg$(_c, \"JobsSide\");","map":{"version":3,"names":["useEffect","useState","db","collection","getDocs","addDoc","doc","updateDoc","deleteDoc","query","where","Typography","TextField","Container","Grid","Battery1Bar","jsxDEV","_jsxDEV","Fragment","_Fragment","JobsSide","_s","jobs","setJobs","courseID","setCourseID","term","setTerm","type","setType","numPositions","setNumPosition","state","setState","showPopup","setShowPopup","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","UsersCollectionRef","getUsersData","data","docs","map","elem","id","createJob","Courseid","Term","Type","NumPositions","State","window","location","reload","handleUpdate","updatedData","updateJob","jobQuerySnapshot","length","jobRef","ref","console","log","error","handleDelete","deleteJob","checkUser","fullWidth","style","display","flexDirection","alignItems","textAlign","container","spacing","justify","item","xs","sm","variant","size","name","placeholder","onChange","event","target","value","marginRight","user","component","maxWidth","_c","$RefreshReg$"],"sources":["C:/Users/Kaleb/source/repos/Fighting-Mongooses/src/components/JobsSideTest.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { db } from './firebase-config';\r\nimport { collection, getDocs, addDoc, doc, updateDoc, deleteDoc, query, where } from \"firebase/firestore\"\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Battery1Bar } from '@mui/icons-material';\r\n\r\nfunction JobsSide() {\r\n  // Define state variables to manage form input and job data\r\n  const [jobs, setJobs] = useState([]);\r\n  const [courseID, setCourseID] = useState(\"\");\r\n  const [term, setTerm] = useState(\"\");\r\n  const [type, setType] = useState(\"\");\r\n  const [numPositions, setNumPosition] = useState(\"\");\r\n  const [state, setState] = useState(\"\");\r\n\r\n  //popup card \r\n  const [showPopup, setShowPopup] = useState(false);\r\n  {showPopup && (\r\n    <div className=\"popup\">\r\n      <p>This is the popup content.</p>\r\n      <button onClick={() => setShowPopup(false)}>Close</button>\r\n    </div>\r\n  )}\r\n\r\n\r\n  // Define a reference to the \"backenddata\" collection in Firestore\r\n  const UsersCollectionRef = collection(db, \"backenddata\");\r\n\r\n  // Use the useEffect hook to fetch data from Firestore when the component mounts\r\n  useEffect(() => {\r\n    getUsersData();\r\n  }, []);\r\n\r\n  // Fetch data from Firestore and update the state variable \"jobs\"\r\n  const getUsersData = async () => {\r\n    const data = await getDocs(UsersCollectionRef);\r\n    setJobs(data.docs.map((elem) => ({ ...elem.data(), id: elem.id })));\r\n  };\r\n\r\n  // Add a new job to Firestore\r\n  const createJob = async () => {\r\n    await addDoc(UsersCollectionRef, {\r\n      Courseid: courseID,\r\n      Term: term,\r\n      Type: type,\r\n      NumPositions: numPositions,\r\n      State: state,\r\n    });\r\n    window.location.reload();\r\n  };\r\n\r\n  const handleUpdate = async () => {\r\n    // Create an object with the updated data for the document\r\n    const updatedData = {\r\n      Courseid: courseID,\r\n      Term: term,\r\n      Type: type,\r\n      NumPositions: numPositions,\r\n      State: state,\r\n    };\r\n    // Call the updateJob function with the courseID and updated data\r\n    await updateJob(courseID, updatedData);\r\n  };\r\n\r\n  // Define a function that updates a document in Firebase with the specified ID\r\n  const updateJob = async (id, updatedData) => {\r\n    try {\r\n      // Query Firebase for documents that match the specified courseID\r\n      const jobQuerySnapshot = await getDocs(\r\n        query(UsersCollectionRef, where(\"Courseid\", \"==\", id))\r\n      );\r\n      // If there is at least one document that matches the query\r\n      if (jobQuerySnapshot.docs.length > 0) {\r\n        // Get the reference to the first document that matches the query\r\n        const jobRef = jobQuerySnapshot.docs[0].ref;\r\n        // Update the document with the updated data\r\n        await updateDoc(jobRef, updatedData);\r\n        console.log(\"Document successfully updated!\");\r\n      } else {\r\n        console.log(`No job found with id ${id}`);\r\n      }\r\n      // Reload the page to show the updated data\r\n      window.location.reload();\r\n    } catch (error) {\r\n      console.error(\"Error updating document: \", error);\r\n    }\r\n  };\r\n  const handleDelete = async () => {\r\n    await deleteJob(courseID);\r\n  };\r\n\r\n  const deleteJob = async (id) => {//delete a job with the selected courseid\r\n    try {\r\n      const jobQuerySnapshot = await getDocs(\r\n        // Query Firebase for documents that match the specified courseID\r\n        query(UsersCollectionRef, where(\"Courseid\", \"==\", id))\r\n      );\r\n      if (jobQuerySnapshot.docs.length > 0) {\r\n        // If there is at least one document that matches the query\r\n        await deleteDoc(jobQuerySnapshot.docs[0].ref);\r\n        // delete the document\r\n        console.log(\"Document successfully deleted!\");\r\n      } else {\r\n        console.log(`No job found with id ${id}`);\r\n      }\r\n      window.location.reload();\r\n    } catch (error) {\r\n      console.error(\"Error deleting document: \", error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n  // Check user\r\n  // Define an asynchronous function called \"checkUser\"\r\n  const checkUser = async () => {\r\n    // Use the \"addDoc\" function to add a new document to the \"UsersCollectionRef\" collection in Firestore\r\n    // The new document will contain the values of the \"courseID\", \"term\", \"type\", \"numPositions\", and \"state\" variables\r\n    await addDoc(UsersCollectionRef, {\r\n      Courseid: courseID,\r\n      Term: term,\r\n      Type: type,\r\n      NumPositions: numPositions,\r\n      State: state,\r\n    });\r\n\r\n    // Reload the page after the new document has been added\r\n    window.location.reload();\r\n  };\r\n  return (\r\n    <div className='split-screen'>\r\n      <div className='split-screen-left' >\r\n        <container fullWidth>\r\n          <>\r\n            <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n              <h2 style={{ textAlign: 'center' }}>Manage Jobs</h2>\r\n              <Grid container spacing={2} justify=\"center\">\r\n                <Grid item xs={12} sm={10}>\r\n                  <TextField\r\n                    variant='outlined'\r\n                    size='medium'\r\n                    fullWidth\r\n                    name='courseID'\r\n                    placeholder='*CourseID'\r\n                    onChange={(event) => { setCourseID(event.target.value) }}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container spacing={2} justify=\"center\">\r\n                <Grid item xs={12} sm={10}>\r\n                  <TextField\r\n                    variant='outlined'\r\n                    size='medium'\r\n                    fullWidth\r\n                    name='term'\r\n                    placeholder='Term'\r\n                    onChange={(event) => { setTerm(event.target.value) }}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid container spacing={2} justify=\"center\">\r\n                <Grid item xs={12} sm={10}>\r\n                  <TextField\r\n                    variant='outlined'\r\n                    size='medium'\r\n                    fullWidth\r\n                    name='type'\r\n                    placeholder='Type'\r\n                    onChange={(event) => { setType(event.target.value) }}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid container spacing={2} justify=\"center\">\r\n                <Grid item xs={12} sm={10}>\r\n                  <TextField\r\n                    variant='outlined'\r\n                    size='medium'\r\n                    fullWidth\r\n                    name='numPositions'\r\n                    placeholder='NumPositions'\r\n                    onChange={(event) => { setNumPosition(event.target.value) }}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid container spacing={3} justify=\"center\">\r\n                <Grid item xs={12} sm={10}>\r\n                  <TextField\r\n                    variant='outlined'\r\n                    size='medium'\r\n                    fullWidth\r\n                    name='state'\r\n                    placeholder='State'\r\n                    onChange={(event) => { setState(event.target.value) }}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n            <br></br>\r\n            <button onClick={createJob} className=\"button\">\r\n              Create Job\r\n            </button>\r\n            <button onClick={handleUpdate} className=\"button\">\r\n              Update Job\r\n            </button>\r\n            <button onClick={handleDelete} className=\"button\">\r\n              Delete Job\r\n            </button>\r\n            <br /><br />\r\n          </>\r\n        </container>\r\n      </div>\r\n      <div className='split-screen-right'>\r\n        <Container fullWidth>\r\n          <h2 style={{ textAlign: 'center', marginRight: '175px' }}>Current Jobs</h2>\r\n        </Container>\r\n\r\n        {jobs.map(user => {\r\n          return (\r\n            <div className='hover:animate-pulse m-4 bg-gray-600 w-1/4 rounded-md p-2'>\r\n              <Container component=\"main\" maxWidth=\"xs\">\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12} sm={15}>\r\n                    <table className='jobTable'>\r\n                      <thead>\r\n                        <tr>\r\n                          <th>Course ID</th>\r\n                          <th>Term</th>\r\n                          <th>Type</th>\r\n                          <th>Num Positions</th>\r\n                          <th>State</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        <tr>\r\n                          <td>{user.Courseid}</td>\r\n                          <td>{user.Term}</td>\r\n                          <td>{user.Type}</td>\r\n                          <td>{user.NumPositions}</td>\r\n                          <td>{user.State}</td>\r\n                          <td>\r\n                            <button onClick={() => setShowPopup(true)}>View</button>\r\n                          </td>\r\n                        </tr>\r\n                      </tbody>\r\n                    </table>\r\n                  </Grid>\r\n                </Grid>\r\n              </Container>\r\n              <br></br>\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default JobsSide;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,EAAE,QAAQ,mBAAmB;AACtC,SAASC,UAAU,EAAEC,OAAO,EAAEC,MAAM,EAAEC,GAAG,EAAEC,SAAS,EAAEC,SAAS,EAAEC,KAAK,EAAEC,KAAK,QAAQ,oBAAoB;AACzG,OAAOC,UAAU,MAAM,8BAA8B;AACrD,OAAOC,SAAS,MAAM,6BAA6B;AACnD,OAAOC,SAAS,MAAM,6BAA6B;AACnD,OAAOC,IAAI,MAAM,wBAAwB;AACzC,SAASC,WAAW,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElD,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACuB,QAAQ,EAAEC,WAAW,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACyB,IAAI,EAAEC,OAAO,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAAC2B,IAAI,EAAEC,OAAO,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAAC6B,YAAY,EAAEC,cAAc,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;EACnD,MAAM,CAAC+B,KAAK,EAAEC,QAAQ,CAAC,GAAGhC,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACA,MAAM,CAACiC,SAAS,EAAEC,YAAY,CAAC,GAAGlC,QAAQ,CAAC,KAAK,CAAC;EACjD;IAACiC,SAAS,iBACRjB,OAAA;MAAKmB,SAAS,EAAC,OAAO;MAAAC,QAAA,gBACpBpB,OAAA;QAAAoB,QAAA,EAAG;MAA0B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI,eACjCxB,OAAA;QAAQyB,OAAO,EAAEA,CAAA,KAAMP,YAAY,CAAC,KAAK,CAAE;QAAAE,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAE7D;EAAA;;EAGD;EACA,MAAME,kBAAkB,GAAGxC,UAAU,CAACD,EAAE,EAAE,aAAa,CAAC;;EAExD;EACAF,SAAS,CAAC,MAAM;IACd4C,YAAY,EAAE;EAChB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMA,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAMC,IAAI,GAAG,MAAMzC,OAAO,CAACuC,kBAAkB,CAAC;IAC9CpB,OAAO,CAACsB,IAAI,CAACC,IAAI,CAACC,GAAG,CAAEC,IAAI,KAAM;MAAE,GAAGA,IAAI,CAACH,IAAI,EAAE;MAAEI,EAAE,EAAED,IAAI,CAACC;IAAG,CAAC,CAAC,CAAC,CAAC;EACrE,CAAC;;EAED;EACA,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,MAAM7C,MAAM,CAACsC,kBAAkB,EAAE;MAC/BQ,QAAQ,EAAE3B,QAAQ;MAClB4B,IAAI,EAAE1B,IAAI;MACV2B,IAAI,EAAEzB,IAAI;MACV0B,YAAY,EAAExB,YAAY;MAC1ByB,KAAK,EAAEvB;IACT,CAAC,CAAC;IACFwB,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;EAC1B,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B;IACA,MAAMC,WAAW,GAAG;MAClBT,QAAQ,EAAE3B,QAAQ;MAClB4B,IAAI,EAAE1B,IAAI;MACV2B,IAAI,EAAEzB,IAAI;MACV0B,YAAY,EAAExB,YAAY;MAC1ByB,KAAK,EAAEvB;IACT,CAAC;IACD;IACA,MAAM6B,SAAS,CAACrC,QAAQ,EAAEoC,WAAW,CAAC;EACxC,CAAC;;EAED;EACA,MAAMC,SAAS,GAAG,MAAAA,CAAOZ,EAAE,EAAEW,WAAW,KAAK;IAC3C,IAAI;MACF;MACA,MAAME,gBAAgB,GAAG,MAAM1D,OAAO,CACpCK,KAAK,CAACkC,kBAAkB,EAAEjC,KAAK,CAAC,UAAU,EAAE,IAAI,EAAEuC,EAAE,CAAC,CAAC,CACvD;MACD;MACA,IAAIa,gBAAgB,CAAChB,IAAI,CAACiB,MAAM,GAAG,CAAC,EAAE;QACpC;QACA,MAAMC,MAAM,GAAGF,gBAAgB,CAAChB,IAAI,CAAC,CAAC,CAAC,CAACmB,GAAG;QAC3C;QACA,MAAM1D,SAAS,CAACyD,MAAM,EAAEJ,WAAW,CAAC;QACpCM,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;MAC/C,CAAC,MAAM;QACLD,OAAO,CAACC,GAAG,CAAE,wBAAuBlB,EAAG,EAAC,CAAC;MAC3C;MACA;MACAO,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;IAC1B,CAAC,CAAC,OAAOU,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;EACD,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAMC,SAAS,CAAC9C,QAAQ,CAAC;EAC3B,CAAC;EAED,MAAM8C,SAAS,GAAG,MAAOrB,EAAE,IAAK;IAAC;IAC/B,IAAI;MACF,MAAMa,gBAAgB,GAAG,MAAM1D,OAAO;MACpC;MACAK,KAAK,CAACkC,kBAAkB,EAAEjC,KAAK,CAAC,UAAU,EAAE,IAAI,EAAEuC,EAAE,CAAC,CAAC,CACvD;MACD,IAAIa,gBAAgB,CAAChB,IAAI,CAACiB,MAAM,GAAG,CAAC,EAAE;QACpC;QACA,MAAMvD,SAAS,CAACsD,gBAAgB,CAAChB,IAAI,CAAC,CAAC,CAAC,CAACmB,GAAG,CAAC;QAC7C;QACAC,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;MAC/C,CAAC,MAAM;QACLD,OAAO,CAACC,GAAG,CAAE,wBAAuBlB,EAAG,EAAC,CAAC;MAC3C;MACAO,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;IAC1B,CAAC,CAAC,OAAOU,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;;EAKD;EACA;EACA,MAAMG,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B;IACA;IACA,MAAMlE,MAAM,CAACsC,kBAAkB,EAAE;MAC/BQ,QAAQ,EAAE3B,QAAQ;MAClB4B,IAAI,EAAE1B,IAAI;MACV2B,IAAI,EAAEzB,IAAI;MACV0B,YAAY,EAAExB,YAAY;MAC1ByB,KAAK,EAAEvB;IACT,CAAC,CAAC;;IAEF;IACAwB,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;EAC1B,CAAC;EACD,oBACEzC,OAAA;IAAKmB,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC3BpB,OAAA;MAAKmB,SAAS,EAAC,mBAAmB;MAAAC,QAAA,eAChCpB,OAAA;QAAWuD,SAAS;QAAAnC,QAAA,eAClBpB,OAAA,CAAAE,SAAA;UAAAkB,QAAA,gBACEpB,OAAA;YAAKwD,KAAK,EAAE;cAAEC,OAAO,EAAE,MAAM;cAAEC,aAAa,EAAE,QAAQ;cAAEC,UAAU,EAAE;YAAS,CAAE;YAAAvC,QAAA,gBAC7EpB,OAAA;cAAIwD,KAAK,EAAE;gBAAEI,SAAS,EAAE;cAAS,CAAE;cAAAxC,QAAA,EAAC;YAAW;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAK,eACpDxB,OAAA,CAACH,IAAI;cAACgE,SAAS;cAACC,OAAO,EAAE,CAAE;cAACC,OAAO,EAAC,QAAQ;cAAA3C,QAAA,eAC1CpB,OAAA,CAACH,IAAI;gBAACmE,IAAI;gBAACC,EAAE,EAAE,EAAG;gBAACC,EAAE,EAAE,EAAG;gBAAA9C,QAAA,eACxBpB,OAAA,CAACL,SAAS;kBACRwE,OAAO,EAAC,UAAU;kBAClBC,IAAI,EAAC,QAAQ;kBACbb,SAAS;kBACTc,IAAI,EAAC,UAAU;kBACfC,WAAW,EAAC,WAAW;kBACvBC,QAAQ,EAAGC,KAAK,IAAK;oBAAEhE,WAAW,CAACgE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;kBAAC;gBAAE;kBAAArD,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA;cACzD;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA;YACG;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QACF,eACPxB,OAAA,CAACH,IAAI;cAACgE,SAAS;cAACC,OAAO,EAAE,CAAE;cAACC,OAAO,EAAC,QAAQ;cAAA3C,QAAA,eAC1CpB,OAAA,CAACH,IAAI;gBAACmE,IAAI;gBAACC,EAAE,EAAE,EAAG;gBAACC,EAAE,EAAE,EAAG;gBAAA9C,QAAA,eACxBpB,OAAA,CAACL,SAAS;kBACRwE,OAAO,EAAC,UAAU;kBAClBC,IAAI,EAAC,QAAQ;kBACbb,SAAS;kBACTc,IAAI,EAAC,MAAM;kBACXC,WAAW,EAAC,MAAM;kBAClBC,QAAQ,EAAGC,KAAK,IAAK;oBAAE9D,OAAO,CAAC8D,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;kBAAC;gBAAE;kBAAArD,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA;cACrD;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA;YACG;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QACF,eAEPxB,OAAA,CAACH,IAAI;cAACgE,SAAS;cAACC,OAAO,EAAE,CAAE;cAACC,OAAO,EAAC,QAAQ;cAAA3C,QAAA,eAC1CpB,OAAA,CAACH,IAAI;gBAACmE,IAAI;gBAACC,EAAE,EAAE,EAAG;gBAACC,EAAE,EAAE,EAAG;gBAAA9C,QAAA,eACxBpB,OAAA,CAACL,SAAS;kBACRwE,OAAO,EAAC,UAAU;kBAClBC,IAAI,EAAC,QAAQ;kBACbb,SAAS;kBACTc,IAAI,EAAC,MAAM;kBACXC,WAAW,EAAC,MAAM;kBAClBC,QAAQ,EAAGC,KAAK,IAAK;oBAAE5D,OAAO,CAAC4D,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;kBAAC;gBAAE;kBAAArD,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA;cACrD;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA;YACG;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QACF,eAEPxB,OAAA,CAACH,IAAI;cAACgE,SAAS;cAACC,OAAO,EAAE,CAAE;cAACC,OAAO,EAAC,QAAQ;cAAA3C,QAAA,eAC1CpB,OAAA,CAACH,IAAI;gBAACmE,IAAI;gBAACC,EAAE,EAAE,EAAG;gBAACC,EAAE,EAAE,EAAG;gBAAA9C,QAAA,eACxBpB,OAAA,CAACL,SAAS;kBACRwE,OAAO,EAAC,UAAU;kBAClBC,IAAI,EAAC,QAAQ;kBACbb,SAAS;kBACTc,IAAI,EAAC,cAAc;kBACnBC,WAAW,EAAC,cAAc;kBAC1BC,QAAQ,EAAGC,KAAK,IAAK;oBAAE1D,cAAc,CAAC0D,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;kBAAC;gBAAE;kBAAArD,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA;cAC5D;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA;YACG;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QACF,eAEPxB,OAAA,CAACH,IAAI;cAACgE,SAAS;cAACC,OAAO,EAAE,CAAE;cAACC,OAAO,EAAC,QAAQ;cAAA3C,QAAA,eAC1CpB,OAAA,CAACH,IAAI;gBAACmE,IAAI;gBAACC,EAAE,EAAE,EAAG;gBAACC,EAAE,EAAE,EAAG;gBAAA9C,QAAA,eACxBpB,OAAA,CAACL,SAAS;kBACRwE,OAAO,EAAC,UAAU;kBAClBC,IAAI,EAAC,QAAQ;kBACbb,SAAS;kBACTc,IAAI,EAAC,OAAO;kBACZC,WAAW,EAAC,OAAO;kBACnBC,QAAQ,EAAGC,KAAK,IAAK;oBAAExD,QAAQ,CAACwD,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;kBAAC;gBAAE;kBAAArD,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA;cACtD;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA;YACG;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QACF;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACH,eACNxB,OAAA;YAAAqB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAS,eACTxB,OAAA;YAAQyB,OAAO,EAAEQ,SAAU;YAACd,SAAS,EAAC,QAAQ;YAAAC,QAAA,EAAC;UAE/C;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAS,eACTxB,OAAA;YAAQyB,OAAO,EAAEiB,YAAa;YAACvB,SAAS,EAAC,QAAQ;YAAAC,QAAA,EAAC;UAElD;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAS,eACTxB,OAAA;YAAQyB,OAAO,EAAE2B,YAAa;YAACjC,SAAS,EAAC,QAAQ;YAAAC,QAAA,EAAC;UAElD;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAS,eACTxB,OAAA;YAAAqB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAM,eAAAxB,OAAA;YAAAqB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAM;QAAA;MACX;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACO;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACR,eACNxB,OAAA;MAAKmB,SAAS,EAAC,oBAAoB;MAAAC,QAAA,gBACjCpB,OAAA,CAACJ,SAAS;QAAC2D,SAAS;QAAAnC,QAAA,eAClBpB,OAAA;UAAIwD,KAAK,EAAE;YAAEI,SAAS,EAAE,QAAQ;YAAEe,WAAW,EAAE;UAAQ,CAAE;UAAAvD,QAAA,EAAC;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAK;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACjE,EAEXnB,IAAI,CAACyB,GAAG,CAAC8C,IAAI,IAAI;QAChB,oBACE5E,OAAA;UAAKmB,SAAS,EAAC,0DAA0D;UAAAC,QAAA,gBACvEpB,OAAA,CAACJ,SAAS;YAACiF,SAAS,EAAC,MAAM;YAACC,QAAQ,EAAC,IAAI;YAAA1D,QAAA,eACvCpB,OAAA,CAACH,IAAI;cAACgE,SAAS;cAACC,OAAO,EAAE,CAAE;cAAA1C,QAAA,eACzBpB,OAAA,CAACH,IAAI;gBAACmE,IAAI;gBAACC,EAAE,EAAE,EAAG;gBAACC,EAAE,EAAE,EAAG;gBAAA9C,QAAA,eACxBpB,OAAA;kBAAOmB,SAAS,EAAC,UAAU;kBAAAC,QAAA,gBACzBpB,OAAA;oBAAAoB,QAAA,eACEpB,OAAA;sBAAAoB,QAAA,gBACEpB,OAAA;wBAAAoB,QAAA,EAAI;sBAAS;wBAAAC,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,QAAK,eAClBxB,OAAA;wBAAAoB,QAAA,EAAI;sBAAI;wBAAAC,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,QAAK,eACbxB,OAAA;wBAAAoB,QAAA,EAAI;sBAAI;wBAAAC,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,QAAK,eACbxB,OAAA;wBAAAoB,QAAA,EAAI;sBAAa;wBAAAC,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,QAAK,eACtBxB,OAAA;wBAAAoB,QAAA,EAAI;sBAAK;wBAAAC,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,QAAK;oBAAA;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA;kBACX;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,QACC,eACRxB,OAAA;oBAAAoB,QAAA,eACEpB,OAAA;sBAAAoB,QAAA,gBACEpB,OAAA;wBAAAoB,QAAA,EAAKwD,IAAI,CAAC1C;sBAAQ;wBAAAb,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,QAAM,eACxBxB,OAAA;wBAAAoB,QAAA,EAAKwD,IAAI,CAACzC;sBAAI;wBAAAd,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,QAAM,eACpBxB,OAAA;wBAAAoB,QAAA,EAAKwD,IAAI,CAACxC;sBAAI;wBAAAf,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,QAAM,eACpBxB,OAAA;wBAAAoB,QAAA,EAAKwD,IAAI,CAACvC;sBAAY;wBAAAhB,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,QAAM,eAC5BxB,OAAA;wBAAAoB,QAAA,EAAKwD,IAAI,CAACtC;sBAAK;wBAAAjB,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,QAAM,eACrBxB,OAAA;wBAAAoB,QAAA,eACEpB,OAAA;0BAAQyB,OAAO,EAAEA,CAAA,KAAMP,YAAY,CAAC,IAAI,CAAE;0BAAAE,QAAA,EAAC;wBAAI;0BAAAC,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA;sBAAS;wBAAAH,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,QACrD;oBAAA;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA;kBACF;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,QACC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA;cACF;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA;YACH;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UACF;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACG,eACZxB,OAAA;YAAAqB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAS;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACL;MAEV,CAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAMV;AAACpB,EAAA,CAjQQD,QAAQ;AAAA4E,EAAA,GAAR5E,QAAQ;AAmQjB,eAAeA,QAAQ;AAAC,IAAA4E,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}