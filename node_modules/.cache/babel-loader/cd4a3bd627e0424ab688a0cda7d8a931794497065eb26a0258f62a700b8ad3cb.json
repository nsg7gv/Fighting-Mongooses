{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kaleb\\\\source\\\\repos\\\\Fighting-Mongooses\\\\src\\\\components\\\\JobsSide.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { db } from './firebase-config';\nimport { collection, getDocs, addDoc, doc, updateDoc } from \"firebase/firestore\";\nimport { getDatabase, ref, onValue } from \"firebase/database\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction JobsSide() {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [courseID, setCourseID] = useState([]);\n  const [term, setTerm] = useState(\"\");\n  const [type, setType] = useState([]);\n  const [numPositions, setNumPosition] = useState(\"\");\n  const [description, setDescription] = useState(0);\n  const [state, setState] = useState([]);\n  const UsersCollectionRef = collection(db, \"backenddata\");\n  useEffect(() => {\n    const getUsersData = async () => {\n      const data = await getDocs(UsersCollectionRef);\n      setCourseID(data.docs.map(elem => ({\n        ...elem.data(),\n        id: elem.id\n      })));\n      setTerm(data.docs.map(elem => ({\n        ...elem.data(),\n        id: elem.id\n      })));\n      setType(data.docs.map(elem => ({\n        ...elem.data(),\n        id: elem.id\n      })));\n      setNumPosition(data.docs.map(elem => ({\n        ...elem.data(),\n        id: elem.id\n      })));\n      setState(data.docs.map(elem => ({\n        ...elem.data(),\n        id: elem.id\n      })));\n    };\n    getUsersData();\n  }, []);\n  const CreateUser = async () => {\n    await addDoc(UsersCollectionRef, {\n      Courseid: courseID,\n      Term: term,\n      Type: type,\n      NumPositions: numPositions,\n      Description: description,\n      State: state\n    });\n  };\n  const CheckUser = async () => {\n    await addDoc(UsersCollectionRef, {\n      Courseid: courseID,\n      Term: term,\n      Type: type,\n      NumPositions: numPositions,\n      Description: description,\n      State: state\n    });\n    window.location.reload();\n  };\n  const updateDB = async (id, courseID, term, type, numPositions, description, state) => {\n    const userDoc = doc(db, \"backenddata\", id);\n    const NewDoc = {\n      Courseid: courseID,\n      Term: term,\n      Type: type,\n      NumPositions: numPositions,\n      Description: description,\n      State: state\n    };\n    console.log(\"Updated the Data on System\");\n    await updateDoc(userDoc, NewDoc);\n    console.log(\"Updated the Data on the Server\");\n    window.location.reload();\n  };\n  const db = getDatabase();\n  const starCountRef = ref(db, 'posts/' + postId + '/starCount');\n  onValue(starCountRef, snapshot => {\n    const data = snapshot.val();\n    updateStarCount(postElement, data);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Jobs\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"courseID\",\n      placeholder: \"CourseID\",\n      onChange: event => {\n        setCourseID(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"term\",\n      placeholder: \"Term\",\n      onChange: event => {\n        setTerm(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"type\",\n      placeholder: \"Type\",\n      onChange: event => {\n        setType(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"numPositions\",\n      placeholder: \"NumPositions\",\n      onChange: event => {\n        setNumPosition(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"state\",\n      placeholder: \"State\",\n      onChange: event => {\n        setState(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: CreateUser,\n      children: \"Add To DB\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), users.map(user => {\n      /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          updateDB(user.courseID, user.term, user.name, user.type, user.numPositions, user.description, user.state);\n        },\n        children: \"Update DB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(JobsSide, \"pvxLW6ukzq/ON9NF0xTMfbgPpSw=\");\n_c = JobsSide;\nexport default JobsSide;\nvar _c;\n$RefreshReg$(_c, \"JobsSide\");","map":{"version":3,"names":["useEffect","useState","db","collection","getDocs","addDoc","doc","updateDoc","getDatabase","ref","onValue","JobsSide","users","setUsers","courseID","setCourseID","term","setTerm","type","setType","numPositions","setNumPosition","description","setDescription","state","setState","UsersCollectionRef","getUsersData","data","docs","map","elem","id","CreateUser","Courseid","Term","Type","NumPositions","Description","State","CheckUser","window","location","reload","updateDB","userDoc","NewDoc","console","log","starCountRef","postId","snapshot","val","updateStarCount","postElement","event","target","value","user","name"],"sources":["C:/Users/Kaleb/source/repos/Fighting-Mongooses/src/components/JobsSide.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport {db} from './firebase-config';\r\nimport {collection,getDocs, addDoc, doc, updateDoc} from \"firebase/firestore\"\r\nimport { getDatabase, ref, onValue} from \"firebase/database\";\r\n\r\nfunction JobsSide() {\r\n  const [users, setUsers] = useState([])\r\n  const [courseID, setCourseID] = useState([]);\r\n  const [term, setTerm] = useState(\"\");\r\n  const [type, setType] = useState([]);\r\n  const [numPositions, setNumPosition] = useState(\"\");\r\n  const [description, setDescription] = useState(0);\r\n  const [state, setState] = useState([]);\r\n  const UsersCollectionRef = collection(db, \"backenddata\")\r\n\r\n\r\n  useEffect(() => {\r\n    const getUsersData = async () => {\r\n      const data = await getDocs(UsersCollectionRef)\r\n      setCourseID(data.docs.map((elem) => ({ ...elem.data(), id: elem.id })))\r\n      setTerm(data.docs.map((elem) => ({ ...elem.data(), id: elem.id })))\r\n      setType(data.docs.map((elem) => ({ ...elem.data(), id: elem.id })))\r\n      setNumPosition(data.docs.map((elem) => ({ ...elem.data(), id: elem.id })))\r\n      setState(data.docs.map((elem) => ({ ...elem.data(), id: elem.id })))\r\n\r\n    }\r\n\r\n    getUsersData()\r\n  }, [])\r\n\r\n  const CreateUser = async () => {\r\n    await addDoc(UsersCollectionRef, { Courseid: courseID, Term : term, Type : type, NumPositions : numPositions, Description : description, State : state})\r\n  }\r\n\r\n  const CheckUser = async () => {\r\n    await addDoc(UsersCollectionRef, { Courseid: courseID, Term : term, Type : type, NumPositions : numPositions, Description : description, State : state})\r\n    window.location.reload()\r\n  }\r\n\r\n  const updateDB = async (id, courseID,term,type,numPositions,description,state) => {\r\n    const userDoc = doc(db, \"backenddata\", id)\r\n    const NewDoc = { Courseid: courseID, Term : term,Type : type, NumPositions : numPositions, Description : description, State : state}\r\n    console.log(\"Updated the Data on System\")\r\n    await updateDoc(userDoc,NewDoc)\r\n    console.log(\"Updated the Data on the Server\")\r\n    window.location.reload()\r\n  }\r\n\r\n  const db = getDatabase();\r\n  const starCountRef = ref(db, 'posts/' + postId + '/starCount');\r\n  onValue(starCountRef, (snapshot) => {\r\n    const data = snapshot.val();\r\n    updateStarCount(postElement, data);\r\n  });\r\n  \r\n\r\n  return (\r\n    <div className=\"Jobs\">\r\n              <input\r\n                name='courseID'\r\n                placeholder='CourseID'\r\n                onChange={(event) => { setCourseID(event.target.value)}}\r\n              />\r\n              <input\r\n                name='term'\r\n                placeholder='Term'\r\n                onChange={(event) => { setTerm(event.target.value)}}\r\n              />\r\n              <input\r\n                name='type'\r\n                placeholder='Type'\r\n                onChange={(event) => { setType(event.target.value)}}\r\n              />\r\n              <input\r\n                name='numPositions'\r\n                placeholder='NumPositions'\r\n                onChange={(event) => { setNumPosition(event.target.value)}}\r\n              />\r\n              <input\r\n                name='state'\r\n                placeholder='State'\r\n                onChange={(event) => { setState(event.target.value)}}\r\n              />\r\n      <button onClick={CreateUser}>Add To DB</button>\r\n      {users.map(user => {\r\n\r\n      <button onClick={() => {updateDB(user.courseID,user.term,user.name,user.type,user.numPositions,user.description, user.state)}}>Update DB</button>\r\n      })}\r\n    \r\n      </div>\r\n  );\r\n      }\r\n\r\nexport default JobsSide;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAAQC,EAAE,QAAO,mBAAmB;AACpC,SAAQC,UAAU,EAACC,OAAO,EAAEC,MAAM,EAAEC,GAAG,EAAEC,SAAS,QAAO,oBAAoB;AAC7E,SAASC,WAAW,EAAEC,GAAG,EAAEC,OAAO,QAAO,mBAAmB;AAAC;AAE7D,SAASC,QAAQ,GAAG;EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACe,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACiB,IAAI,EAAEC,OAAO,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACmB,YAAY,EAAEC,cAAc,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EACnD,MAAM,CAACqB,WAAW,EAAEC,cAAc,CAAC,GAAGtB,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACuB,KAAK,EAAEC,QAAQ,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMyB,kBAAkB,GAAGvB,UAAU,CAACD,EAAE,EAAE,aAAa,CAAC;EAGxDF,SAAS,CAAC,MAAM;IACd,MAAM2B,YAAY,GAAG,YAAY;MAC/B,MAAMC,IAAI,GAAG,MAAMxB,OAAO,CAACsB,kBAAkB,CAAC;MAC9CX,WAAW,CAACa,IAAI,CAACC,IAAI,CAACC,GAAG,CAAEC,IAAI,KAAM;QAAE,GAAGA,IAAI,CAACH,IAAI,EAAE;QAAEI,EAAE,EAAED,IAAI,CAACC;MAAG,CAAC,CAAC,CAAC,CAAC;MACvEf,OAAO,CAACW,IAAI,CAACC,IAAI,CAACC,GAAG,CAAEC,IAAI,KAAM;QAAE,GAAGA,IAAI,CAACH,IAAI,EAAE;QAAEI,EAAE,EAAED,IAAI,CAACC;MAAG,CAAC,CAAC,CAAC,CAAC;MACnEb,OAAO,CAACS,IAAI,CAACC,IAAI,CAACC,GAAG,CAAEC,IAAI,KAAM;QAAE,GAAGA,IAAI,CAACH,IAAI,EAAE;QAAEI,EAAE,EAAED,IAAI,CAACC;MAAG,CAAC,CAAC,CAAC,CAAC;MACnEX,cAAc,CAACO,IAAI,CAACC,IAAI,CAACC,GAAG,CAAEC,IAAI,KAAM;QAAE,GAAGA,IAAI,CAACH,IAAI,EAAE;QAAEI,EAAE,EAAED,IAAI,CAACC;MAAG,CAAC,CAAC,CAAC,CAAC;MAC1EP,QAAQ,CAACG,IAAI,CAACC,IAAI,CAACC,GAAG,CAAEC,IAAI,KAAM;QAAE,GAAGA,IAAI,CAACH,IAAI,EAAE;QAAEI,EAAE,EAAED,IAAI,CAACC;MAAG,CAAC,CAAC,CAAC,CAAC;IAEtE,CAAC;IAEDL,YAAY,EAAE;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,UAAU,GAAG,YAAY;IAC7B,MAAM5B,MAAM,CAACqB,kBAAkB,EAAE;MAAEQ,QAAQ,EAAEpB,QAAQ;MAAEqB,IAAI,EAAGnB,IAAI;MAAEoB,IAAI,EAAGlB,IAAI;MAAEmB,YAAY,EAAGjB,YAAY;MAAEkB,WAAW,EAAGhB,WAAW;MAAEiB,KAAK,EAAGf;IAAK,CAAC,CAAC;EAC1J,CAAC;EAED,MAAMgB,SAAS,GAAG,YAAY;IAC5B,MAAMnC,MAAM,CAACqB,kBAAkB,EAAE;MAAEQ,QAAQ,EAAEpB,QAAQ;MAAEqB,IAAI,EAAGnB,IAAI;MAAEoB,IAAI,EAAGlB,IAAI;MAAEmB,YAAY,EAAGjB,YAAY;MAAEkB,WAAW,EAAGhB,WAAW;MAAEiB,KAAK,EAAGf;IAAK,CAAC,CAAC;IACxJiB,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;EAC1B,CAAC;EAED,MAAMC,QAAQ,GAAG,OAAOZ,EAAE,EAAElB,QAAQ,EAACE,IAAI,EAACE,IAAI,EAACE,YAAY,EAACE,WAAW,EAACE,KAAK,KAAK;IAChF,MAAMqB,OAAO,GAAGvC,GAAG,CAACJ,EAAE,EAAE,aAAa,EAAE8B,EAAE,CAAC;IAC1C,MAAMc,MAAM,GAAG;MAAEZ,QAAQ,EAAEpB,QAAQ;MAAEqB,IAAI,EAAGnB,IAAI;MAACoB,IAAI,EAAGlB,IAAI;MAAEmB,YAAY,EAAGjB,YAAY;MAAEkB,WAAW,EAAGhB,WAAW;MAAEiB,KAAK,EAAGf;IAAK,CAAC;IACpIuB,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;IACzC,MAAMzC,SAAS,CAACsC,OAAO,EAACC,MAAM,CAAC;IAC/BC,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;IAC7CP,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;EAC1B,CAAC;EAED,MAAMzC,EAAE,GAAGM,WAAW,EAAE;EACxB,MAAMyC,YAAY,GAAGxC,GAAG,CAACP,EAAE,EAAE,QAAQ,GAAGgD,MAAM,GAAG,YAAY,CAAC;EAC9DxC,OAAO,CAACuC,YAAY,EAAGE,QAAQ,IAAK;IAClC,MAAMvB,IAAI,GAAGuB,QAAQ,CAACC,GAAG,EAAE;IAC3BC,eAAe,CAACC,WAAW,EAAE1B,IAAI,CAAC;EACpC,CAAC,CAAC;EAGF,oBACE;IAAK,SAAS,EAAC,MAAM;IAAA,wBACX;MACE,IAAI,EAAC,UAAU;MACf,WAAW,EAAC,UAAU;MACtB,QAAQ,EAAG2B,KAAK,IAAK;QAAExC,WAAW,CAACwC,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;MAAA;IAAE;MAAA;MAAA;MAAA;IAAA,QACxD,eACF;MACE,IAAI,EAAC,MAAM;MACX,WAAW,EAAC,MAAM;MAClB,QAAQ,EAAGF,KAAK,IAAK;QAAEtC,OAAO,CAACsC,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;MAAA;IAAE;MAAA;MAAA;MAAA;IAAA,QACpD,eACF;MACE,IAAI,EAAC,MAAM;MACX,WAAW,EAAC,MAAM;MAClB,QAAQ,EAAGF,KAAK,IAAK;QAAEpC,OAAO,CAACoC,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;MAAA;IAAE;MAAA;MAAA;MAAA;IAAA,QACpD,eACF;MACE,IAAI,EAAC,cAAc;MACnB,WAAW,EAAC,cAAc;MAC1B,QAAQ,EAAGF,KAAK,IAAK;QAAElC,cAAc,CAACkC,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;MAAA;IAAE;MAAA;MAAA;MAAA;IAAA,QAC3D,eACF;MACE,IAAI,EAAC,OAAO;MACZ,WAAW,EAAC,OAAO;MACnB,QAAQ,EAAGF,KAAK,IAAK;QAAE9B,QAAQ,CAAC8B,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;MAAA;IAAE;MAAA;MAAA;MAAA;IAAA,QACrD,eACV;MAAQ,OAAO,EAAExB,UAAW;MAAA,UAAC;IAAS;MAAA;MAAA;MAAA;IAAA,QAAS,EAC9CrB,KAAK,CAACkB,GAAG,CAAC4B,IAAI,IAAI;MAEnB;QAAQ,OAAO,EAAE,MAAM;UAACd,QAAQ,CAACc,IAAI,CAAC5C,QAAQ,EAAC4C,IAAI,CAAC1C,IAAI,EAAC0C,IAAI,CAACC,IAAI,EAACD,IAAI,CAACxC,IAAI,EAACwC,IAAI,CAACtC,YAAY,EAACsC,IAAI,CAACpC,WAAW,EAAEoC,IAAI,CAAClC,KAAK,CAAC;QAAA,CAAE;QAAA,UAAC;MAAS;QAAA;QAAA;QAAA;MAAA,QAAS;IACjJ,CAAC,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QAEI;AAEN;AAAC,GAtFEb,QAAQ;AAAA,KAARA,QAAQ;AAwFjB,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}