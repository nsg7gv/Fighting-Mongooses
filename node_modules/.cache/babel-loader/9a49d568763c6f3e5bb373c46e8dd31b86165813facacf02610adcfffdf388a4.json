{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kaleb\\\\source\\\\repos\\\\Fighting-Mongooses\\\\src\\\\components\\\\JobsSideTest.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { db } from './firebase-config';\nimport { collection, getDocs, addDoc, doc, updateDoc, deleteDoc, query, where } from \"firebase/firestore\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Battery1Bar } from '@mui/icons-material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction JobsSide() {\n  _s();\n  // Define state variables to manage form input and job data\n  const [jobs, setJobs] = useState([]);\n  const [courseID, setCourseID] = useState(\"\");\n  const [term, setTerm] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [numPositions, setNumPosition] = useState(\"\");\n  const [state, setState] = useState(\"\");\n\n  // Define a reference to the \"backenddata\" collection in Firestore\n  const UsersCollectionRef = collection(db, \"backenddata\");\n\n  // Use the useEffect hook to fetch data from Firestore when the component mounts\n  useEffect(() => {\n    getUsersData();\n  }, []);\n\n  // Fetch data from Firestore and update the state variable \"jobs\"\n  const getUsersData = async () => {\n    const data = await getDocs(UsersCollectionRef);\n    setJobs(data.docs.map(elem => ({\n      ...elem.data(),\n      id: elem.id\n    })));\n  };\n\n  // Add a new job to Firestore\n  const createJob = async () => {\n    await addDoc(UsersCollectionRef, {\n      Courseid: courseID,\n      Term: term,\n      Type: type,\n      NumPositions: numPositions,\n      State: state\n    });\n  };\n  const handleUpdate = async () => {\n    // Create an object with the updated data for the document\n    const updatedData = {\n      Courseid: courseID,\n      Term: term,\n      Type: type,\n      NumPositions: numPositions,\n      State: state\n    };\n    // Call the updateJob function with the courseID and updated data\n    await updateJob(courseID, updatedData);\n  };\n\n  // Define a function that updates a document in Firebase with the specified ID\n  const updateJob = async (id, updatedData) => {\n    try {\n      // Query Firebase for documents that match the specified courseID\n      const jobQuerySnapshot = await getDocs(query(UsersCollectionRef, where(\"Courseid\", \"==\", id)));\n      // If there is at least one document that matches the query\n      if (jobQuerySnapshot.docs.length > 0) {\n        // Get the reference to the first document that matches the query\n        const jobRef = jobQuerySnapshot.docs[0].ref;\n        // Update the document with the updated data\n        await updateDoc(jobRef, updatedData);\n        console.log(\"Document successfully updated!\");\n      } else {\n        console.log(`No job found with id ${id}`);\n      }\n      // Reload the page to show the updated data\n      window.location.reload();\n    } catch (error) {\n      console.error(\"Error updating document: \", error);\n    }\n  };\n  const handleDelete = async () => {\n    await deleteJob(courseID);\n  };\n  const deleteJob = async id => {\n    //delete a job with the selected courseid\n    try {\n      const jobQuerySnapshot = await getDocs(\n      // Query Firebase for documents that match the specified courseID\n      query(UsersCollectionRef, where(\"Courseid\", \"==\", id)));\n      if (jobQuerySnapshot.docs.length > 0) {\n        // If there is at least one document that matches the query\n        await deleteDoc(jobQuerySnapshot.docs[0].ref);\n        // delete the document\n        console.log(\"Document successfully deleted!\");\n      } else {\n        console.log(`No job found with id ${id}`);\n      }\n      window.location.reload();\n    } catch (error) {\n      console.error(\"Error deleting document: \", error);\n    }\n  };\n\n  // Check user\n  // Define an asynchronous function called \"checkUser\"\n  const checkUser = async () => {\n    // Use the \"addDoc\" function to add a new document to the \"UsersCollectionRef\" collection in Firestore\n    // The new document will contain the values of the \"courseID\", \"term\", \"type\", \"numPositions\", and \"state\" variables\n    await addDoc(UsersCollectionRef, {\n      Courseid: courseID,\n      Term: term,\n      Type: type,\n      NumPositions: numPositions,\n      State: state\n    });\n\n    // Reload the page after the new document has been added\n    window.location.reload();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"split-screen-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-pane\",\n      children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h5\",\n          fullWidth: true,\n          children: \"Admin Job Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              size: \"small\",\n              fullWidth: true,\n              name: \"courseID\",\n              placeholder: \"CourseID\",\n              onChange: event => {\n                setCourseID(event.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              size: \"small\",\n              fullWidth: true,\n              name: \"term\",\n              placeholder: \"Term\",\n              onChange: event => {\n                setTerm(event.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              size: \"small\",\n              fullWidth: true,\n              name: \"type\",\n              placeholder: \"Type\",\n              onChange: event => {\n                setType(event.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              size: \"small\",\n              fullWidth: true,\n              name: \"numPositions\",\n              placeholder: \"NumPositions\",\n              onChange: event => {\n                setNumPosition(event.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              size: \"small\",\n              fullWidth: true,\n              name: \"state\",\n              placeholder: \"State\",\n              onChange: event => {\n                setState(event.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createJob,\n        children: \"Add to DB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpdate,\n        children: \"Update User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDelete,\n        children: \"Delete Job\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right-pane\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Current Jobs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), jobs.map(user => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hover:animate-pulse m-4 bg-gray-600 w-1/4 rounded-md p-2\",\n          children: /*#__PURE__*/_jsxDEV(Container, {\n            component: \"main\",\n            maxWidth: \"xs\",\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 15,\n                children: /*#__PURE__*/_jsxDEV(\"table\", {\n                  className: \"jobTable\",\n                  children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Course ID\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 219,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Term\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 220,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Type\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 221,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Num Positions\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 222,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"State\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 223,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 218,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 217,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        children: user.Courseid\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 228,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: user.Term\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 229,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: user.Type\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 230,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: user.NumPositions\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 231,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: user.State\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 232,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                          children: \"Edit\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 234,\n                          columnNumber: 29\n                        }, this), \" \"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 233,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 227,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 226,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 9\n  }, this);\n}\n_s(JobsSide, \"IRZJIKhJFAoXgj+GtBowS5sD+W0=\");\n_c = JobsSide;\nexport default JobsSide;\nvar _c;\n$RefreshReg$(_c, \"JobsSide\");","map":{"version":3,"names":["useEffect","useState","db","collection","getDocs","addDoc","doc","updateDoc","deleteDoc","query","where","Typography","TextField","Container","Grid","Battery1Bar","jsxDEV","_jsxDEV","Fragment","_Fragment","JobsSide","_s","jobs","setJobs","courseID","setCourseID","term","setTerm","type","setType","numPositions","setNumPosition","state","setState","UsersCollectionRef","getUsersData","data","docs","map","elem","id","createJob","Courseid","Term","Type","NumPositions","State","handleUpdate","updatedData","updateJob","jobQuerySnapshot","length","jobRef","ref","console","log","window","location","reload","error","handleDelete","deleteJob","checkUser","className","children","component","variant","fullWidth","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","item","xs","sm","size","name","placeholder","onChange","event","target","value","onClick","user","maxWidth","_c","$RefreshReg$"],"sources":["C:/Users/Kaleb/source/repos/Fighting-Mongooses/src/components/JobsSideTest.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { db } from './firebase-config';\r\nimport { collection, getDocs, addDoc, doc, updateDoc, deleteDoc, query, where } from \"firebase/firestore\"\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Battery1Bar } from '@mui/icons-material';\r\n\r\nfunction JobsSide() {\r\n  // Define state variables to manage form input and job data\r\n  const [jobs, setJobs] = useState([]);\r\n  const [courseID, setCourseID] = useState(\"\");\r\n  const [term, setTerm] = useState(\"\");\r\n  const [type, setType] = useState(\"\");\r\n  const [numPositions, setNumPosition] = useState(\"\");\r\n  const [state, setState] = useState(\"\");\r\n\r\n  // Define a reference to the \"backenddata\" collection in Firestore\r\n  const UsersCollectionRef = collection(db, \"backenddata\");\r\n\r\n  // Use the useEffect hook to fetch data from Firestore when the component mounts\r\n  useEffect(() => {\r\n    getUsersData();\r\n  }, []);\r\n\r\n  // Fetch data from Firestore and update the state variable \"jobs\"\r\n  const getUsersData = async () => {\r\n    const data = await getDocs(UsersCollectionRef);\r\n    setJobs(data.docs.map((elem) => ({ ...elem.data(), id: elem.id })));\r\n  };\r\n\r\n  // Add a new job to Firestore\r\n  const createJob = async () => {\r\n    await addDoc(UsersCollectionRef, {\r\n      Courseid: courseID,\r\n      Term: term,\r\n      Type: type,\r\n      NumPositions: numPositions,\r\n      State: state,\r\n    });\r\n  };\r\n\r\n  const handleUpdate = async () => {\r\n    // Create an object with the updated data for the document\r\n    const updatedData = {\r\n      Courseid: courseID,\r\n      Term: term,\r\n      Type: type,\r\n      NumPositions: numPositions,\r\n      State: state,\r\n    };\r\n    // Call the updateJob function with the courseID and updated data\r\n    await updateJob(courseID, updatedData);\r\n  };\r\n\r\n  // Define a function that updates a document in Firebase with the specified ID\r\n  const updateJob = async (id, updatedData) => {\r\n    try {\r\n      // Query Firebase for documents that match the specified courseID\r\n      const jobQuerySnapshot = await getDocs(\r\n        query(UsersCollectionRef, where(\"Courseid\", \"==\", id))\r\n      );\r\n      // If there is at least one document that matches the query\r\n      if (jobQuerySnapshot.docs.length > 0) {\r\n        // Get the reference to the first document that matches the query\r\n        const jobRef = jobQuerySnapshot.docs[0].ref;\r\n        // Update the document with the updated data\r\n        await updateDoc(jobRef, updatedData);\r\n        console.log(\"Document successfully updated!\");\r\n      } else {\r\n        console.log(`No job found with id ${id}`);\r\n      }\r\n      // Reload the page to show the updated data\r\n      window.location.reload();\r\n    } catch (error) {\r\n      console.error(\"Error updating document: \", error);\r\n    }\r\n  };\r\n  const handleDelete = async () => {\r\n    await deleteJob(courseID);\r\n  };\r\n\r\n  const deleteJob = async (id) => {//delete a job with the selected courseid\r\n    try {\r\n      const jobQuerySnapshot = await getDocs(\r\n        // Query Firebase for documents that match the specified courseID\r\n        query(UsersCollectionRef, where(\"Courseid\", \"==\", id)) \r\n      );\r\n      if (jobQuerySnapshot.docs.length > 0) {\r\n        // If there is at least one document that matches the query\r\n        await deleteDoc(jobQuerySnapshot.docs[0].ref);\r\n        // delete the document\r\n        console.log(\"Document successfully deleted!\");\r\n      } else {\r\n        console.log(`No job found with id ${id}`);\r\n      }\r\n      window.location.reload();\r\n    } catch (error) {\r\n      console.error(\"Error deleting document: \", error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n  // Check user\r\n  // Define an asynchronous function called \"checkUser\"\r\n  const checkUser = async () => {\r\n    // Use the \"addDoc\" function to add a new document to the \"UsersCollectionRef\" collection in Firestore\r\n    // The new document will contain the values of the \"courseID\", \"term\", \"type\", \"numPositions\", and \"state\" variables\r\n    await addDoc(UsersCollectionRef, {\r\n      Courseid: courseID,\r\n      Term: term,\r\n      Type: type,\r\n      NumPositions: numPositions,\r\n      State: state,\r\n    });\r\n\r\n    // Reload the page after the new document has been added\r\n    window.location.reload();\r\n  };\r\n\r\n\r\n\r\n\r\n  return (\r\n        <div className=\"split-screen-container\">\r\n            <div className=\"left-pane\">\r\n            <>\r\n        <Typography component=\"h1\" variant=\"h5\" fullWidth>\r\n          Admin Job Page\r\n        </Typography>\r\n        \r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant='outlined'\r\n                size='small'\r\n                fullWidth\r\n                name='courseID'\r\n                placeholder='CourseID'\r\n                onChange={(event) => { setCourseID(event.target.value) }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant='outlined'\r\n                size='small'\r\n                fullWidth\r\n                name='term'\r\n                placeholder='Term'\r\n                onChange={(event) => { setTerm(event.target.value) }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant='outlined'\r\n                size='small'\r\n                fullWidth\r\n                name='type'\r\n                placeholder='Type'\r\n                onChange={(event) => { setType(event.target.value) }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant='outlined'\r\n                size='small'\r\n                fullWidth\r\n                name='numPositions'\r\n                placeholder='NumPositions'\r\n                onChange={(event) => { setNumPosition(event.target.value) }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant='outlined'\r\n                size='small'\r\n                fullWidth\r\n                name='state'\r\n                placeholder='State'\r\n                onChange={(event) => { setState(event.target.value) }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </>\r\n        <button onClick={createJob}>Add to DB</button>\r\n        <button onClick={handleUpdate}>Update User</button>\r\n        <button onClick={handleDelete}>Delete Job</button>\r\n        <br /><br />\r\n              </div>\r\n            <div className=\"right-pane\">\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n          Current Jobs\r\n\r\n        </Typography>\r\n        <br></br>\r\n        {jobs.map(user => {\r\n          return (\r\n            <div className='hover:animate-pulse m-4 bg-gray-600 w-1/4 rounded-md p-2'>\r\n              <Container component=\"main\" maxWidth=\"xs\">\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12} sm={15}>\r\n                    <table className='jobTable'>\r\n                      <thead>\r\n                        <tr>\r\n                          <th>Course ID</th>\r\n                          <th>Term</th>\r\n                          <th>Type</th>\r\n                          <th>Num Positions</th>\r\n                          <th>State</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        <tr>\r\n                          <td>{user.Courseid}</td>\r\n                          <td>{user.Term}</td>\r\n                          <td>{user.Type}</td>\r\n                          <td>{user.NumPositions}</td>\r\n                          <td>{user.State}</td>\r\n                          <td>\r\n                            <button>Edit</button> {/* todo add function */}\r\n                          </td>\r\n                        </tr>\r\n                      </tbody>\r\n                    </table>\r\n                  </Grid>\r\n                </Grid>\r\n              </Container>\r\n            </div>\r\n          )\r\n        })}\r\n              </div>\r\n          </div>\r\n  );\r\n}\r\n\r\nexport default JobsSide;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}