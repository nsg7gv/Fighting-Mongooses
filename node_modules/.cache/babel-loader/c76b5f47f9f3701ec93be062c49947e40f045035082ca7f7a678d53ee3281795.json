{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kaleb\\\\source\\\\repos\\\\Fighting-Mongooses\\\\src\\\\components\\\\jobList.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Container, Grid, Typography, Card, CardContent, Table, TableHead, TableBody, TableRow, TableCell, Button } from '@material-ui/core';\nimport Popup from './popup';\nimport { db } from '../firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JobList = _ref => {\n  _s();\n  let {\n    jobs,\n    positionId,\n    showPopup,\n    setShowPopup\n  } = _ref;\n  const [applicants, setApplicants] = React.useState([]);\n  React.useEffect(() => {\n    const getApplicants = async () => {\n      const querySnapshot = await db.collection('application').where(Job.Courseid, '==', positionId).get();\n      const applicantsData = querySnapshot.docs.map(doc => doc.data().userEmail);\n      setApplicants(applicantsData);\n    };\n    getApplicants();\n  }, [positionId]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      align: \"center\",\n      style: {\n        marginBottom: '2rem'\n      },\n      children: \"Current Jobs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), jobs.map(job => /*#__PURE__*/_jsxDEV(Card, {\n      className: \"hover:animate-pulse m-4 rounded-md\",\n      style: {\n        backgroundColor: 'gray',\n        width: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          component: \"main\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Table, {\n                className: \"jobTable\",\n                style: {\n                  tableLayout: 'fixed'\n                },\n                children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                  children: /*#__PURE__*/_jsxDEV(TableRow, {\n                    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                      children: \"Course ID\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 53,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: \"Term\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 54,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: \"Type\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 55,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: \"Num Positions\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 56,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: \"State\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 57,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: \"Actions\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 58,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 52,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                  children: /*#__PURE__*/_jsxDEV(TableRow, {\n                    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                      children: job.Courseid\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 63,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: job.Term\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 64,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: job.Type\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 65,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: job.NumPositions\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 66,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: job.State\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 67,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: [/*#__PURE__*/_jsxDEV(Button, {\n                        variant: \"contained\",\n                        style: {\n                          backgroundColor: '#005293',\n                          color: 'white',\n                          width: '100%'\n                        },\n                        onClick: () => setShowPopup(true),\n                        children: \"Applicants\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 69,\n                        columnNumber: 27\n                      }, this), showPopup && /*#__PURE__*/_jsxDEV(Popup, {\n                        title: \"Applicants\",\n                        onClose: () => setShowPopup(false),\n                        children: /*#__PURE__*/_jsxDEV(Table, {\n                          children: /*#__PURE__*/_jsxDEV(TableBody, {\n                            children: applicants.filter(applicant => applicant !== undefined).map(applicant => /*#__PURE__*/_jsxDEV(TableRow, {\n                              children: /*#__PURE__*/_jsxDEV(TableCell, {\n                                children: applicant\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 85,\n                                columnNumber: 41\n                              }, this)\n                            }, applicant, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 84,\n                              columnNumber: 39\n                            }, this))\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 80,\n                            columnNumber: 33\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 79,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 78,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 68,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 62,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)\n    }, job.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(JobList, \"/ZYrimItWfsxEXSjzvXypk/EECs=\");\n_c = JobList;\nexport default JobList;\nvar _c;\n$RefreshReg$(_c, \"JobList\");","map":{"version":3,"names":["React","Container","Grid","Typography","Card","CardContent","Table","TableHead","TableBody","TableRow","TableCell","Button","Popup","db","jsxDEV","_jsxDEV","JobList","_ref","_s","jobs","positionId","showPopup","setShowPopup","applicants","setApplicants","useState","useEffect","getApplicants","querySnapshot","collection","where","Job","Courseid","get","applicantsData","docs","map","doc","data","userEmail","maxWidth","children","variant","align","style","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","job","className","backgroundColor","width","component","container","spacing","item","xs","tableLayout","Term","Type","NumPositions","State","color","onClick","title","onClose","filter","applicant","undefined","id","_c","$RefreshReg$"],"sources":["C:/Users/Kaleb/source/repos/Fighting-Mongooses/src/components/jobList.js"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  Container,\r\n  Grid,\r\n  Typography,\r\n  Card,\r\n  CardContent,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Button,\r\n} from '@material-ui/core';\r\nimport Popup from './popup';\r\nimport { db } from '../firebase';\r\n\r\nconst JobList = ({ jobs, positionId, showPopup, setShowPopup }) => {\r\n  const [applicants, setApplicants] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    const getApplicants = async () => {\r\n      const querySnapshot = await db\r\n        .collection('application')\r\n        .where(Job.Courseid, '==', positionId)\r\n        .get();\r\n      \r\n      const applicantsData = querySnapshot.docs.map((doc) => doc.data().userEmail);\r\n      setApplicants(applicantsData);\r\n    };\r\n\r\n    getApplicants();\r\n  }, [positionId]);\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      <Typography variant=\"h4\" align=\"center\" style={{ marginBottom: '2rem' }}>\r\n        Current Jobs\r\n      </Typography>\r\n      {jobs.map((job) => (\r\n        <Card\r\n          className=\"hover:animate-pulse m-4 rounded-md\"\r\n          style={{ backgroundColor: 'gray', width: '100%' }}\r\n          key={job.id}\r\n        >\r\n          <CardContent>\r\n            <Container component=\"main\">\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                  <Table className=\"jobTable\" style={{ tableLayout: 'fixed' }}>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>Course ID</TableCell>\r\n                        <TableCell>Term</TableCell>\r\n                        <TableCell>Type</TableCell>\r\n                        <TableCell>Num Positions</TableCell>\r\n                        <TableCell>State</TableCell>\r\n                        <TableCell>Actions</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      <TableRow>\r\n                        <TableCell>{job.Courseid}</TableCell>\r\n                        <TableCell>{job.Term}</TableCell>\r\n                        <TableCell>{job.Type}</TableCell>\r\n                        <TableCell>{job.NumPositions}</TableCell>\r\n                        <TableCell>{job.State}</TableCell>\r\n                        <TableCell>\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            style={{ backgroundColor: '#005293', color: 'white', width: '100%' }}\r\n                            onClick={() => setShowPopup(true)}\r\n                          >\r\n                            Applicants\r\n                          </Button>\r\n\r\n                          {showPopup && (\r\n                            <Popup title=\"Applicants\" onClose={() => setShowPopup(false)}>\r\n                              <Table>\r\n                                <TableBody>\r\n                                  {applicants\r\n                                    .filter((applicant) => applicant !== undefined)\r\n                                    .map((applicant) => (\r\n                                      <TableRow key={applicant}>\r\n                                        <TableCell>{applicant}</TableCell>\r\n                                      </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                              </Table>\r\n                            </Popup>\r\n                          )}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    </TableBody>\r\n                  </Table>\r\n                </Grid>\r\n              </Grid>\r\n            </Container>\r\n          </CardContent>\r\n        </Card>\r\n      ))}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default JobList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}