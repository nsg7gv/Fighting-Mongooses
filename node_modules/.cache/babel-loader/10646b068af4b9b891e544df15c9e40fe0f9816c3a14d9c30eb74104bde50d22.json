{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kaleb\\\\source\\\\repos\\\\Fighting-Mongooses\\\\src\\\\components\\\\JobsSideTest.js\",\n  _s = $RefreshSig$();\nimport { React, useEffect, useState } from 'react';\nimport { db } from './firebase-config';\nimport { collection, getDocs, addDoc, doc, updateDoc, deleteDoc, query, where } from \"firebase/firestore\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Popup from './popup';\nimport { Button } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction JobsSide() {\n  _s();\n  // Define state variables to manage form input and job data\n  const [jobs, setJobs] = useState([]);\n  const [courseID, setCourseID] = useState(\"\");\n  const [term, setTerm] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [numPositions, setNumPosition] = useState(\"\");\n  const [state, setState] = useState(\"\");\n\n  //popup card \n  const [users, setUsers] = useState([]);\n  const [showPopup, setShowPopup] = useState(false);\n\n  // reference to the \"backenddata\" collection in Firestore\n  const JobCollectionRef = collection(db, \"backenddata\");\n  // reference to the \"profile\" collection in Firestore\n  const UserCollectionRef = collection(db, \"profile\");\n  useEffect(() => {\n    getUserData();\n  }, []);\n\n  // Fetch data from Firestore and update the state variable \"jobs\"\n  const getUserData = async () => {\n    const data = await getDocs(UserCollectionRef);\n    setUsers(data.docs.map(elem => ({\n      ...elem.data(),\n      id: elem.id\n    })));\n  };\n\n  // Use the useEffect hook to fetch data from Firestore when the component mounts\n  useEffect(() => {\n    getJobData();\n  }, []);\n\n  // Fetch data from Firestore and update the state variable \"jobs\"\n  const getJobData = async () => {\n    const data = await getDocs(JobCollectionRef);\n    setJobs(data.docs.map(elem => ({\n      ...elem.data(),\n      id: elem.id\n    })));\n  };\n\n  /* This function may need to be used to find applicants to a specific job\r\n  useEffect(() => {\r\n    async function fetchUserProfiles() {\r\n      const userProfiles = await getUserProfiles();\r\n      setUsers(userProfiles);\r\n    }\r\n    fetchUserProfiles();\r\n  }, []);\r\n    const getUserProfiles = async () => {\r\n    try {\r\n      const userProfilesCollectionRef = collection(db, 'profile');\r\n      const querySnapshot = await getDocs(userProfilesCollectionRef);\r\n      const userProfiles = [];\r\n      querySnapshot.forEach((doc) => {\r\n        userProfiles.push({ id: doc.id, ...doc.data() });\r\n      });\r\n      return userProfiles;\r\n    } catch (error) {\r\n      console.error('Error retrieving user profiles: ', error);\r\n      return null;\r\n    }\r\n  }*/\n\n  // Add a new job to Firestore\n  const createJob = async () => {\n    await addDoc(JobCollectionRef, {\n      Courseid: courseID,\n      Term: term,\n      Type: type,\n      NumPositions: numPositions,\n      State: state\n    });\n    window.location.reload();\n  };\n  const handleUpdate = async () => {\n    // Create an object with the updated data for the document\n    const updatedData = {\n      Courseid: courseID,\n      Term: term,\n      Type: type,\n      NumPositions: numPositions,\n      State: state\n    };\n    // Call the updateJob function with the courseID and updated data\n    await updateJob(courseID, updatedData);\n  };\n\n  // Define a function that updates a document in Firebase with the specified ID\n  const updateJob = async (id, updatedData) => {\n    try {\n      // Query Firebase for documents that match the specified courseID\n      const jobQuerySnapshot = await getDocs(query(JobCollectionRef, where(\"Courseid\", \"==\", id)));\n      // If there is at least one document that matches the query\n      if (jobQuerySnapshot.docs.length > 0) {\n        // Get the reference to the first document that matches the query\n        const jobRef = jobQuerySnapshot.docs[0].ref;\n        // Update the document with the updated data\n        await updateDoc(jobRef, updatedData);\n        console.log(\"Document successfully updated!\");\n      } else {\n        console.log(`No job found with id ${id}`);\n      }\n      // Reload the page to show the updated data\n      window.location.reload();\n    } catch (error) {\n      console.error(\"Error updating document: \", error);\n    }\n  };\n  const handleDelete = async () => {\n    await deleteJob(courseID);\n  };\n  const deleteJob = async id => {\n    //delete a job with the selected courseid\n    try {\n      const jobQuerySnapshot = await getDocs(\n      // Query Firebase for documents that match the specified courseID\n      query(JobCollectionRef, where(\"Courseid\", \"==\", id)));\n      if (jobQuerySnapshot.docs.length > 0) {\n        // If there is at least one document that matches the query\n        await deleteDoc(jobQuerySnapshot.docs[0].ref);\n        // delete the document\n        console.log(\"Document successfully deleted!\");\n      } else {\n        console.log(`No job found with id ${id}`);\n      }\n      window.location.reload();\n    } catch (error) {\n      console.error(\"Error deleting document: \", error);\n    }\n  };\n\n  // Check user\n  // Define an asynchronous function called \"checkUser\"\n  const checkUser = async () => {\n    await addDoc(JobCollectionRef, {\n      Courseid: courseID,\n      Term: term,\n      Type: type,\n      NumPositions: numPositions,\n      State: state\n    });\n\n    // Reload the page after the new document has been added\n    window.location.reload();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        className: \"float-right\",\n        variant: \"contained\",\n        color: \"primary\",\n        component: Link,\n        to: \"/signin\",\n        style: {\n          marginLeft: \"auto\"\n        },\n        children: \"Sign Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"split-screen\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"split-screen-left\",\n        children: /*#__PURE__*/_jsxDEV(\"container\", {\n          fullWidth: true,\n          children: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                style: {\n                  textAlign: 'center'\n                },\n                children: \"Manage Jobs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 2,\n                justify: \"center\",\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 10,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    variant: \"outlined\",\n                    size: \"medium\",\n                    fullWidth: true,\n                    name: \"courseID\",\n                    placeholder: \"*CourseID\",\n                    onChange: event => {\n                      setCourseID(event.target.value);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 186,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 2,\n                justify: \"center\",\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 10,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    variant: \"outlined\",\n                    size: \"medium\",\n                    fullWidth: true,\n                    name: \"term\",\n                    placeholder: \"Term\",\n                    onChange: event => {\n                      setTerm(event.target.value);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 198,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 2,\n                justify: \"center\",\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 10,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    variant: \"outlined\",\n                    size: \"medium\",\n                    fullWidth: true,\n                    name: \"type\",\n                    placeholder: \"Type\",\n                    onChange: event => {\n                      setType(event.target.value);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 211,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 2,\n                justify: \"center\",\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 10,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    variant: \"outlined\",\n                    size: \"medium\",\n                    fullWidth: true,\n                    name: \"numPositions\",\n                    placeholder: \"NumPositions\",\n                    onChange: event => {\n                      setNumPosition(event.target.value);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 224,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 3,\n                justify: \"center\",\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 10,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    variant: \"outlined\",\n                    size: \"medium\",\n                    fullWidth: true,\n                    name: \"state\",\n                    placeholder: \"State\",\n                    onChange: event => {\n                      setState(event.target.value);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 237,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: createJob,\n              className: \"button\",\n              children: \"Create Job\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleUpdate,\n              className: \"button\",\n              children: \"Update Job\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleDelete,\n              className: \"button\",\n              children: \"Delete Job\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"split-screen-right\",\n        children: [/*#__PURE__*/_jsxDEV(Container, {\n          fullWidth: true,\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            style: {\n              textAlign: 'center',\n              marginRight: '175px'\n            },\n            children: \"Current Jobs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 9\n        }, this), jobs.map(job => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hover:animate-pulse m-4 bg-gray-600 w-1/4 rounded-md p-2\",\n            children: [/*#__PURE__*/_jsxDEV(Container, {\n              component: \"main\",\n              maxWidth: \"xs\",\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 2,\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 15,\n                  children: /*#__PURE__*/_jsxDEV(\"table\", {\n                    className: \"jobTable\",\n                    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                          children: \"Course ID\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 276,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: \"Term\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 277,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: \"Type\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 278,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: \"Num Positions\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 279,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: \"State\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 280,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 275,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 274,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                          children: job.Courseid\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 285,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: job.Term\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 286,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: job.Type\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 287,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: job.NumPositions\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 288,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: job.State\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 289,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                            onClick: () => setShowPopup(true),\n                            children: \"Applicants\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 292,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            children: users.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n                              children: showPopup && /*#__PURE__*/_jsxDEV(Popup, {\n                                title: \"Applicants\",\n                                onClose: () => setShowPopup(false),\n                                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                                    children: \"Email:\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 298,\n                                    columnNumber: 40\n                                  }, this), \" \", user.Email]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 298,\n                                  columnNumber: 37\n                                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                                    children: \"Name:\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 299,\n                                    columnNumber: 42\n                                  }, this), \" \", user.LName, \", \", user.FName]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 299,\n                                  columnNumber: 39\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 297,\n                                columnNumber: 37\n                              }, this)\n                            }, user.id, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 295,\n                              columnNumber: 33\n                            }, this))\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 293,\n                            columnNumber: 29\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 290,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 284,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 283,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 273,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n}\n_s(JobsSide, \"9HLzPZLr67yhw0NIc1/UK6fJtlA=\");\n_c = JobsSide;\nexport default JobsSide;\nvar _c;\n$RefreshReg$(_c, \"JobsSide\");","map":{"version":3,"names":["React","useEffect","useState","db","collection","getDocs","addDoc","doc","updateDoc","deleteDoc","query","where","Typography","TextField","Container","Grid","Popup","Button","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","JobsSide","_s","jobs","setJobs","courseID","setCourseID","term","setTerm","type","setType","numPositions","setNumPosition","state","setState","users","setUsers","showPopup","setShowPopup","JobCollectionRef","UserCollectionRef","getUserData","data","docs","map","elem","id","getJobData","createJob","Courseid","Term","Type","NumPositions","State","window","location","reload","handleUpdate","updatedData","updateJob","jobQuerySnapshot","length","jobRef","ref","console","log","error","handleDelete","deleteJob","checkUser","style","display","children","className","variant","color","component","to","marginLeft","fileName","_jsxFileName","lineNumber","columnNumber","fullWidth","flexDirection","alignItems","textAlign","container","spacing","justify","item","xs","sm","size","name","placeholder","onChange","event","target","value","onClick","marginRight","job","maxWidth","user","title","onClose","Email","LName","FName","_c","$RefreshReg$"],"sources":["C:/Users/Kaleb/source/repos/Fighting-Mongooses/src/components/JobsSideTest.js"],"sourcesContent":["import { React, useEffect, useState } from 'react';\r\nimport { db } from './firebase-config';\r\nimport { collection, getDocs, addDoc, doc, updateDoc, deleteDoc, query, where } from \"firebase/firestore\"\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Popup from './popup';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction JobsSide() {\r\n  // Define state variables to manage form input and job data\r\n  const [jobs, setJobs] = useState([]);\r\n  const [courseID, setCourseID] = useState(\"\");\r\n  const [term, setTerm] = useState(\"\");\r\n  const [type, setType] = useState(\"\");\r\n  const [numPositions, setNumPosition] = useState(\"\");\r\n  const [state, setState] = useState(\"\");\r\n\r\n  //popup card \r\n  const [users, setUsers] = useState([]);\r\n  const [showPopup, setShowPopup] = useState(false);\r\n\r\n  // reference to the \"backenddata\" collection in Firestore\r\n  const JobCollectionRef = collection(db, \"backenddata\");\r\n  // reference to the \"profile\" collection in Firestore\r\n  const UserCollectionRef = collection(db, \"profile\");\r\n\r\n  useEffect(() => {\r\n    getUserData();\r\n  }, []);\r\n\r\n  // Fetch data from Firestore and update the state variable \"jobs\"\r\n  const getUserData = async () => {\r\n    const data = await getDocs(UserCollectionRef);\r\n    setUsers(data.docs.map((elem) => ({ ...elem.data(), id: elem.id })));\r\n  };\r\n\r\n  // Use the useEffect hook to fetch data from Firestore when the component mounts\r\n  useEffect(() => {\r\n    getJobData();\r\n  }, []);\r\n\r\n  // Fetch data from Firestore and update the state variable \"jobs\"\r\n  const getJobData = async () => {\r\n    const data = await getDocs(JobCollectionRef);\r\n    setJobs(data.docs.map((elem) => ({ ...elem.data(), id: elem.id })));\r\n  };\r\n\r\n  /* This function may need to be used to find applicants to a specific job\r\n  useEffect(() => {\r\n    async function fetchUserProfiles() {\r\n      const userProfiles = await getUserProfiles();\r\n      setUsers(userProfiles);\r\n    }\r\n    fetchUserProfiles();\r\n  }, []);\r\n\r\n  const getUserProfiles = async () => {\r\n    try {\r\n      const userProfilesCollectionRef = collection(db, 'profile');\r\n      const querySnapshot = await getDocs(userProfilesCollectionRef);\r\n      const userProfiles = [];\r\n      querySnapshot.forEach((doc) => {\r\n        userProfiles.push({ id: doc.id, ...doc.data() });\r\n      });\r\n      return userProfiles;\r\n    } catch (error) {\r\n      console.error('Error retrieving user profiles: ', error);\r\n      return null;\r\n    }\r\n  }*/\r\n\r\n  // Add a new job to Firestore\r\n  const createJob = async () => {\r\n    await addDoc(JobCollectionRef, {\r\n      Courseid: courseID,\r\n      Term: term,\r\n      Type: type,\r\n      NumPositions: numPositions,\r\n      State: state,\r\n    });\r\n    window.location.reload();\r\n  };\r\n\r\n  const handleUpdate = async () => {\r\n    // Create an object with the updated data for the document\r\n    const updatedData = {\r\n      Courseid: courseID,\r\n      Term: term,\r\n      Type: type,\r\n      NumPositions: numPositions,\r\n      State: state,\r\n    };\r\n    // Call the updateJob function with the courseID and updated data\r\n    await updateJob(courseID, updatedData);\r\n  };\r\n\r\n  // Define a function that updates a document in Firebase with the specified ID\r\n  const updateJob = async (id, updatedData) => {\r\n    try {\r\n      // Query Firebase for documents that match the specified courseID\r\n      const jobQuerySnapshot = await getDocs(\r\n        query(JobCollectionRef, where(\"Courseid\", \"==\", id))\r\n      );\r\n      // If there is at least one document that matches the query\r\n      if (jobQuerySnapshot.docs.length > 0) {\r\n        // Get the reference to the first document that matches the query\r\n        const jobRef = jobQuerySnapshot.docs[0].ref;\r\n        // Update the document with the updated data\r\n        await updateDoc(jobRef, updatedData);\r\n        console.log(\"Document successfully updated!\");\r\n      } else {\r\n        console.log(`No job found with id ${id}`);\r\n      }\r\n      // Reload the page to show the updated data\r\n      window.location.reload();\r\n    } catch (error) {\r\n      console.error(\"Error updating document: \", error);\r\n    }\r\n  };\r\n  const handleDelete = async () => {\r\n    await deleteJob(courseID);\r\n  };\r\n\r\n  const deleteJob = async (id) => {//delete a job with the selected courseid\r\n    try {\r\n      const jobQuerySnapshot = await getDocs(\r\n        // Query Firebase for documents that match the specified courseID\r\n        query(JobCollectionRef, where(\"Courseid\", \"==\", id))\r\n      );\r\n      if (jobQuerySnapshot.docs.length > 0) {\r\n        // If there is at least one document that matches the query\r\n        await deleteDoc(jobQuerySnapshot.docs[0].ref);\r\n        // delete the document\r\n        console.log(\"Document successfully deleted!\");\r\n      } else {\r\n        console.log(`No job found with id ${id}`);\r\n      }\r\n      window.location.reload();\r\n    } catch (error) {\r\n      console.error(\"Error deleting document: \", error);\r\n    }\r\n  };\r\n\r\n  // Check user\r\n  // Define an asynchronous function called \"checkUser\"\r\n  const checkUser = async () => {\r\n\r\n    await addDoc(JobCollectionRef, {\r\n      Courseid: courseID,\r\n      Term: term,\r\n      Type: type,\r\n      NumPositions: numPositions,\r\n      State: state,\r\n    });\r\n\r\n    // Reload the page after the new document has been added\r\n    window.location.reload();\r\n  };\r\n  return (\r\n    <div style={{ display: 'flex' }}>\r\n      <div>\r\n      <Button\r\n        className=\"float-right\" \r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        component={Link}\r\n        to=\"/signin\"\r\n        style={{ marginLeft: \"auto\" }}\r\n        \r\n      >\r\n        Sign Out\r\n      </Button>      \r\n    </div>\r\n    <div className='split-screen'>\r\n      <div className='split-screen-left' >\r\n        <container fullWidth>\r\n          <>\r\n            <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n              <h2 style={{ textAlign: 'center' }}>Manage Jobs</h2>\r\n              <Grid container spacing={2} justify=\"center\">\r\n                <Grid item xs={12} sm={10}>\r\n                  <TextField\r\n                    variant='outlined'\r\n                    size='medium'\r\n                    fullWidth\r\n                    name='courseID'\r\n                    placeholder='*CourseID'\r\n                    onChange={(event) => { setCourseID(event.target.value) }}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container spacing={2} justify=\"center\">\r\n                <Grid item xs={12} sm={10}>\r\n                  <TextField\r\n                    variant='outlined'\r\n                    size='medium'\r\n                    fullWidth\r\n                    name='term'\r\n                    placeholder='Term'\r\n                    onChange={(event) => { setTerm(event.target.value) }}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid container spacing={2} justify=\"center\">\r\n                <Grid item xs={12} sm={10}>\r\n                  <TextField\r\n                    variant='outlined'\r\n                    size='medium'\r\n                    fullWidth\r\n                    name='type'\r\n                    placeholder='Type'\r\n                    onChange={(event) => { setType(event.target.value) }}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid container spacing={2} justify=\"center\">\r\n                <Grid item xs={12} sm={10}>\r\n                  <TextField\r\n                    variant='outlined'\r\n                    size='medium'\r\n                    fullWidth\r\n                    name='numPositions'\r\n                    placeholder='NumPositions'\r\n                    onChange={(event) => { setNumPosition(event.target.value) }}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid container spacing={3} justify=\"center\">\r\n                <Grid item xs={12} sm={10}>\r\n                  <TextField\r\n                    variant='outlined'\r\n                    size='medium'\r\n                    fullWidth\r\n                    name='state'\r\n                    placeholder='State'\r\n                    onChange={(event) => { setState(event.target.value) }}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n            <br></br>\r\n            <button onClick={createJob} className=\"button\">\r\n              Create Job\r\n            </button>\r\n            <button onClick={handleUpdate} className=\"button\">\r\n              Update Job\r\n            </button>\r\n            <button onClick={handleDelete} className=\"button\">\r\n              Delete Job\r\n            </button>\r\n            <br /><br />\r\n          </>\r\n        </container>\r\n      </div>\r\n      <div className='split-screen-right'>\r\n        <Container fullWidth>\r\n          <h2 style={{ textAlign: 'center', marginRight: '175px' }}>Current Jobs</h2>\r\n        </Container>\r\n\r\n        {jobs.map(job => {\r\n          return (\r\n            <div className='hover:animate-pulse m-4 bg-gray-600 w-1/4 rounded-md p-2'>\r\n              <Container component=\"main\" maxWidth=\"xs\">\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12} sm={15}>\r\n                    <table className='jobTable'>\r\n                      <thead>\r\n                        <tr>\r\n                          <th>Course ID</th>\r\n                          <th>Term</th>\r\n                          <th>Type</th>\r\n                          <th>Num Positions</th>\r\n                          <th>State</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        <tr>\r\n                          <td>{job.Courseid}</td>\r\n                          <td>{job.Term}</td>\r\n                          <td>{job.Type}</td>\r\n                          <td>{job.NumPositions}</td>\r\n                          <td>{job.State}</td>\r\n                          <td>\r\n                            {/* Change the popup to show applicants*/} \r\n                            <button onClick={() => setShowPopup(true)}>Applicants</button>\r\n                            <div>\r\n                              {users.map((user) => (\r\n                                <div key={user.id}>\r\n                                  {showPopup && (\r\n                                    <Popup title=\"Applicants\" onClose={() => setShowPopup(false)}> \r\n                                    <p><strong>Email:</strong> {user.Email}</p>\r\n                                      <p><strong>Name:</strong> {user.LName}, {user.FName}</p>\r\n                                    </Popup>\r\n                                  )}\r\n                                </div>\r\n                              ))}\r\n                            </div>\r\n                            \r\n                          </td>\r\n                        </tr>\r\n                      </tbody>\r\n                    </table>\r\n                  </Grid>\r\n                </Grid>\r\n              </Container>\r\n              <br></br>\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n    </div>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default JobsSide;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}