{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kaleb\\\\source\\\\repos\\\\Fighting-Mongooses\\\\src\\\\components\\\\card.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { db } from './firebase-config';\nimport { collection, getDocs } from 'firebase/firestore';\nimport JobCard from './JobCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction JobCards() {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  useEffect(() => {\n    const fetchJobs = async () => {\n      try {\n        const jobCollectionRef = collection(db, 'backenddata');\n        const jobSnapshot = await getDocs(jobCollectionRef);\n        const jobData = jobSnapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        setJobs(jobData);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchJobs();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: jobs.map(job => /*#__PURE__*/_jsxDEV(JobCard, {\n      job: job\n    }, job.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n}\n_s(JobCards, \"Q0mbvptFv5mszAZqWDb/1cpBDtw=\");\n_c = JobCards;\nexport default JobCards;\nvar _c;\n$RefreshReg$(_c, \"JobCards\");","map":{"version":3,"names":["useState","useEffect","db","collection","getDocs","JobCard","jsxDEV","_jsxDEV","Fragment","_Fragment","JobCards","_s","jobs","setJobs","fetchJobs","jobCollectionRef","jobSnapshot","jobData","docs","map","doc","id","data","error","console","children","job","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Kaleb/source/repos/Fighting-Mongooses/src/components/card.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { db } from './firebase-config';\r\nimport { collection, getDocs } from 'firebase/firestore';\r\nimport JobCard from './JobCard';\r\n\r\nfunction JobCards() {\r\n  const [jobs, setJobs] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchJobs = async () => {\r\n      try {\r\n        const jobCollectionRef = collection(db, 'backenddata');\r\n        const jobSnapshot = await getDocs(jobCollectionRef);\r\n        const jobData = jobSnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n        setJobs(jobData);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n    fetchJobs();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {jobs.map((job) => (\r\n        <JobCard key={job.id} job={job} />\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default JobCards;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,EAAE,QAAQ,mBAAmB;AACtC,SAASC,UAAU,EAAEC,OAAO,QAAQ,oBAAoB;AACxD,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEhC,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEpCC,SAAS,CAAC,MAAM;IACd,MAAMa,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,gBAAgB,GAAGZ,UAAU,CAACD,EAAE,EAAE,aAAa,CAAC;QACtD,MAAMc,WAAW,GAAG,MAAMZ,OAAO,CAACW,gBAAgB,CAAC;QACnD,MAAME,OAAO,GAAGD,WAAW,CAACE,IAAI,CAACC,GAAG,CAACC,GAAG,KAAK;UAAEC,EAAE,EAAED,GAAG,CAACC,EAAE;UAAE,GAAGD,GAAG,CAACE,IAAI;QAAG,CAAC,CAAC,CAAC;QAC5ET,OAAO,CAACI,OAAO,CAAC;MAClB,CAAC,CAAC,OAAOM,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IACDT,SAAS,EAAE;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA,CAAAE,SAAA;IAAAgB,QAAA,EACGb,IAAI,CAACO,GAAG,CAAEO,GAAG,iBACZnB,OAAA,CAACF,OAAO;MAAcqB,GAAG,EAAEA;IAAI,GAAjBA,GAAG,CAACL,EAAE;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACrB;EAAC,iBACD;AAEP;AAACnB,EAAA,CAxBQD,QAAQ;AAAAqB,EAAA,GAARrB,QAAQ;AA0BjB,eAAeA,QAAQ;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}